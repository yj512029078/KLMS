/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.xmpp.myWRAP;

public class Message extends Stanza {
  private long swigCPtr;

  protected Message(long cPtr, boolean cMemoryOwn) {
    super(klcppwrapJNI.Message_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Message obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        klcppwrapJNI.delete_Message(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public Message(Message.MessageType type, JID to, String body, String subject, String thread, String xmllang) {
    this(klcppwrapJNI.new_Message__SWIG_0(type.swigValue(), JID.getCPtr(to), to, body, subject, thread, xmllang), true);
  }

  public Message(Message.MessageType type, JID to, String body, String subject, String thread) {
    this(klcppwrapJNI.new_Message__SWIG_1(type.swigValue(), JID.getCPtr(to), to, body, subject, thread), true);
  }

  public Message(Message.MessageType type, JID to, String body, String subject) {
    this(klcppwrapJNI.new_Message__SWIG_2(type.swigValue(), JID.getCPtr(to), to, body, subject), true);
  }

  public Message(Message.MessageType type, JID to, String body) {
    this(klcppwrapJNI.new_Message__SWIG_3(type.swigValue(), JID.getCPtr(to), to, body), true);
  }

  public Message(Message.MessageType type, JID to) {
    this(klcppwrapJNI.new_Message__SWIG_4(type.swigValue(), JID.getCPtr(to), to), true);
  }

  public Message.MessageType subtype() {
    return Message.MessageType.swigToEnum(klcppwrapJNI.Message_subtype(swigCPtr, this));
  }

  public String body(String lang) {
    return klcppwrapJNI.Message_body__SWIG_0(swigCPtr, this, lang);
  }

  public String body() {
    return klcppwrapJNI.Message_body__SWIG_1(swigCPtr, this);
  }

  public String subject(String lang) {
    return klcppwrapJNI.Message_subject__SWIG_0(swigCPtr, this, lang);
  }

  public String subject() {
    return klcppwrapJNI.Message_subject__SWIG_1(swigCPtr, this);
  }

  public String thread() {
    return klcppwrapJNI.Message_thread(swigCPtr, this);
  }

  public void setThread(String thread) {
    klcppwrapJNI.Message_setThread(swigCPtr, this, thread);
  }

  public void setID(String id) {
    klcppwrapJNI.Message_setID(swigCPtr, this, id);
  }

  public final static class MessageType {
    public final static Message.MessageType Chat = new Message.MessageType("Chat", klcppwrapJNI.Message_Chat_get());
    public final static Message.MessageType Error = new Message.MessageType("Error", klcppwrapJNI.Message_Error_get());
    public final static Message.MessageType Groupchat = new Message.MessageType("Groupchat", klcppwrapJNI.Message_Groupchat_get());
    public final static Message.MessageType Headline = new Message.MessageType("Headline", klcppwrapJNI.Message_Headline_get());
    public final static Message.MessageType Normal = new Message.MessageType("Normal", klcppwrapJNI.Message_Normal_get());
    public final static Message.MessageType Invalid = new Message.MessageType("Invalid", klcppwrapJNI.Message_Invalid_get());

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static MessageType swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + MessageType.class + " with value " + swigValue);
    }

    private MessageType(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private MessageType(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private MessageType(String swigName, MessageType swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static MessageType[] swigValues = { Chat, Error, Groupchat, Headline, Normal, Invalid };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

}
