/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.xmpp.myWRAP;

public final class StreamEvent {
  public final static StreamEvent StreamEventConnecting = new StreamEvent("StreamEventConnecting");
  public final static StreamEvent StreamEventEncryption = new StreamEvent("StreamEventEncryption");
  public final static StreamEvent StreamEventCompression = new StreamEvent("StreamEventCompression");
  public final static StreamEvent StreamEventAuthentication = new StreamEvent("StreamEventAuthentication");
  public final static StreamEvent StreamEventSessionInit = new StreamEvent("StreamEventSessionInit");
  public final static StreamEvent StreamEventResourceBinding = new StreamEvent("StreamEventResourceBinding");
  public final static StreamEvent StreamEventSMEnable = new StreamEvent("StreamEventSMEnable");
  public final static StreamEvent StreamEventSMResume = new StreamEvent("StreamEventSMResume");
  public final static StreamEvent StreamEventSMResumed = new StreamEvent("StreamEventSMResumed");
  public final static StreamEvent StreamEventSMEnableFailed = new StreamEvent("StreamEventSMEnableFailed");
  public final static StreamEvent StreamEventSMResumeFailed = new StreamEvent("StreamEventSMResumeFailed");
  public final static StreamEvent StreamEventSessionCreation = new StreamEvent("StreamEventSessionCreation");
  public final static StreamEvent StreamEventRoster = new StreamEvent("StreamEventRoster");
  public final static StreamEvent StreamEventFinished = new StreamEvent("StreamEventFinished");

  public final int swigValue() {
    return swigValue;
  }

  public String toString() {
    return swigName;
  }

  public static StreamEvent swigToEnum(int swigValue) {
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (int i = 0; i < swigValues.length; i++)
      if (swigValues[i].swigValue == swigValue)
        return swigValues[i];
    throw new IllegalArgumentException("No enum " + StreamEvent.class + " with value " + swigValue);
  }

  private StreamEvent(String swigName) {
    this.swigName = swigName;
    this.swigValue = swigNext++;
  }

  private StreamEvent(String swigName, int swigValue) {
    this.swigName = swigName;
    this.swigValue = swigValue;
    swigNext = swigValue+1;
  }

  private StreamEvent(String swigName, StreamEvent swigEnum) {
    this.swigName = swigName;
    this.swigValue = swigEnum.swigValue;
    swigNext = this.swigValue+1;
  }

  private static StreamEvent[] swigValues = { StreamEventConnecting, StreamEventEncryption, StreamEventCompression, StreamEventAuthentication, StreamEventSessionInit, StreamEventResourceBinding, StreamEventSMEnable, StreamEventSMResume, StreamEventSMResumed, StreamEventSMEnableFailed, StreamEventSMResumeFailed, StreamEventSessionCreation, StreamEventRoster, StreamEventFinished };
  private static int swigNext = 0;
  private final int swigValue;
  private final String swigName;
}

