/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.xmpp.myWRAP;

public final class StreamError {
  public final static StreamError StreamErrorBadFormat = new StreamError("StreamErrorBadFormat");
  public final static StreamError StreamErrorBadNamespacePrefix = new StreamError("StreamErrorBadNamespacePrefix");
  public final static StreamError StreamErrorConflict = new StreamError("StreamErrorConflict");
  public final static StreamError StreamErrorConnectionTimeout = new StreamError("StreamErrorConnectionTimeout");
  public final static StreamError StreamErrorHostGone = new StreamError("StreamErrorHostGone");
  public final static StreamError StreamErrorHostUnknown = new StreamError("StreamErrorHostUnknown");
  public final static StreamError StreamErrorImproperAddressing = new StreamError("StreamErrorImproperAddressing");
  public final static StreamError StreamErrorInternalServerError = new StreamError("StreamErrorInternalServerError");
  public final static StreamError StreamErrorInvalidFrom = new StreamError("StreamErrorInvalidFrom");
  public final static StreamError StreamErrorInvalidId = new StreamError("StreamErrorInvalidId");
  public final static StreamError StreamErrorInvalidNamespace = new StreamError("StreamErrorInvalidNamespace");
  public final static StreamError StreamErrorInvalidXml = new StreamError("StreamErrorInvalidXml");
  public final static StreamError StreamErrorNotAuthorized = new StreamError("StreamErrorNotAuthorized");
  public final static StreamError StreamErrorPolicyViolation = new StreamError("StreamErrorPolicyViolation");
  public final static StreamError StreamErrorRemoteConnectionFailed = new StreamError("StreamErrorRemoteConnectionFailed");
  public final static StreamError StreamErrorResourceConstraint = new StreamError("StreamErrorResourceConstraint");
  public final static StreamError StreamErrorRestrictedXml = new StreamError("StreamErrorRestrictedXml");
  public final static StreamError StreamErrorSeeOtherHost = new StreamError("StreamErrorSeeOtherHost");
  public final static StreamError StreamErrorSystemShutdown = new StreamError("StreamErrorSystemShutdown");
  public final static StreamError StreamErrorUndefinedCondition = new StreamError("StreamErrorUndefinedCondition");
  public final static StreamError StreamErrorUnsupportedEncoding = new StreamError("StreamErrorUnsupportedEncoding");
  public final static StreamError StreamErrorUnsupportedStanzaType = new StreamError("StreamErrorUnsupportedStanzaType");
  public final static StreamError StreamErrorUnsupportedVersion = new StreamError("StreamErrorUnsupportedVersion");
  public final static StreamError StreamErrorXmlNotWellFormed = new StreamError("StreamErrorXmlNotWellFormed");
  public final static StreamError StreamErrorUndefined = new StreamError("StreamErrorUndefined");

  public final int swigValue() {
    return swigValue;
  }

  public String toString() {
    return swigName;
  }

  public static StreamError swigToEnum(int swigValue) {
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (int i = 0; i < swigValues.length; i++)
      if (swigValues[i].swigValue == swigValue)
        return swigValues[i];
    throw new IllegalArgumentException("No enum " + StreamError.class + " with value " + swigValue);
  }

  private StreamError(String swigName) {
    this.swigName = swigName;
    this.swigValue = swigNext++;
  }

  private StreamError(String swigName, int swigValue) {
    this.swigName = swigName;
    this.swigValue = swigValue;
    swigNext = swigValue+1;
  }

  private StreamError(String swigName, StreamError swigEnum) {
    this.swigName = swigName;
    this.swigValue = swigEnum.swigValue;
    swigNext = this.swigValue+1;
  }

  private static StreamError[] swigValues = { StreamErrorBadFormat, StreamErrorBadNamespacePrefix, StreamErrorConflict, StreamErrorConnectionTimeout, StreamErrorHostGone, StreamErrorHostUnknown, StreamErrorImproperAddressing, StreamErrorInternalServerError, StreamErrorInvalidFrom, StreamErrorInvalidId, StreamErrorInvalidNamespace, StreamErrorInvalidXml, StreamErrorNotAuthorized, StreamErrorPolicyViolation, StreamErrorRemoteConnectionFailed, StreamErrorResourceConstraint, StreamErrorRestrictedXml, StreamErrorSeeOtherHost, StreamErrorSystemShutdown, StreamErrorUndefinedCondition, StreamErrorUnsupportedEncoding, StreamErrorUnsupportedStanzaType, StreamErrorUnsupportedVersion, StreamErrorXmlNotWellFormed, StreamErrorUndefined };
  private static int swigNext = 0;
  private final int swigValue;
  private final String swigName;
}

