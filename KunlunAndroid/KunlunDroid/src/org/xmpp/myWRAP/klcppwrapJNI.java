/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.xmpp.myWRAP;

public class klcppwrapJNI {
  public final static native int StreamFeatureBind_get();
  public final static native int StreamFeatureUnbind_get();
  public final static native int StreamFeatureSession_get();
  public final static native int StreamFeatureStartTls_get();
  public final static native int StreamFeatureIqRegister_get();
  public final static native int StreamFeatureIqAuth_get();
  public final static native int StreamFeatureCompressZlib_get();
  public final static native int StreamFeatureCompressDclz_get();
  public final static native int StreamFeatureStreamManagement_get();
  public final static native int SaslMechNone_get();
  public final static native int SaslMechScramSha1_get();
  public final static native int SaslMechScramSha1Plus_get();
  public final static native int SaslMechDigestMd5_get();
  public final static native int SaslMechPlain_get();
  public final static native int SaslMechAnonymous_get();
  public final static native int SaslMechExternal_get();
  public final static native int SaslMechGssapi_get();
  public final static native int SaslMechNTLM_get();
  public final static native int SaslMechAll_get();
  public final static native int CertOk_get();
  public final static native int CertInvalid_get();
  public final static native int CertSignerUnknown_get();
  public final static native int CertRevoked_get();
  public final static native int CertExpired_get();
  public final static native int CertNotActive_get();
  public final static native int CertWrongPeer_get();
  public final static native int CertSignerNotCa_get();
  public final static native void CertInfo_status_set(long jarg1, CertInfo jarg1_, int jarg2);
  public final static native int CertInfo_status_get(long jarg1, CertInfo jarg1_);
  public final static native void CertInfo_chain_set(long jarg1, CertInfo jarg1_, boolean jarg2);
  public final static native boolean CertInfo_chain_get(long jarg1, CertInfo jarg1_);
  public final static native void CertInfo_issuer_set(long jarg1, CertInfo jarg1_, String jarg2);
  public final static native String CertInfo_issuer_get(long jarg1, CertInfo jarg1_);
  public final static native void CertInfo_server_set(long jarg1, CertInfo jarg1_, String jarg2);
  public final static native String CertInfo_server_get(long jarg1, CertInfo jarg1_);
  public final static native void CertInfo_date_from_set(long jarg1, CertInfo jarg1_, int jarg2);
  public final static native int CertInfo_date_from_get(long jarg1, CertInfo jarg1_);
  public final static native void CertInfo_date_to_set(long jarg1, CertInfo jarg1_, int jarg2);
  public final static native int CertInfo_date_to_get(long jarg1, CertInfo jarg1_);
  public final static native void CertInfo_protocol_set(long jarg1, CertInfo jarg1_, String jarg2);
  public final static native String CertInfo_protocol_get(long jarg1, CertInfo jarg1_);
  public final static native void CertInfo_cipher_set(long jarg1, CertInfo jarg1_, String jarg2);
  public final static native String CertInfo_cipher_get(long jarg1, CertInfo jarg1_);
  public final static native void CertInfo_mac_set(long jarg1, CertInfo jarg1_, String jarg2);
  public final static native String CertInfo_mac_get(long jarg1, CertInfo jarg1_);
  public final static native void CertInfo_compression_set(long jarg1, CertInfo jarg1_, String jarg2);
  public final static native String CertInfo_compression_get(long jarg1, CertInfo jarg1_);
  public final static native long new_CertInfo();
  public final static native void delete_CertInfo(long jarg1);
  public final static native int LogAreaClassParser_get();
  public final static native int LogAreaClassConnectionTCPBase_get();
  public final static native int LogAreaClassClient_get();
  public final static native int LogAreaClassClientbase_get();
  public final static native int LogAreaClassComponent_get();
  public final static native int LogAreaClassDns_get();
  public final static native int LogAreaClassConnectionHTTPProxy_get();
  public final static native int LogAreaClassConnectionSOCKS5Proxy_get();
  public final static native int LogAreaClassConnectionTCPClient_get();
  public final static native int LogAreaClassConnectionTCPServer_get();
  public final static native int LogAreaClassS5BManager_get();
  public final static native int LogAreaClassSOCKS5Bytestream_get();
  public final static native int LogAreaClassConnectionBOSH_get();
  public final static native int LogAreaClassConnectionTLS_get();
  public final static native int LogAreaLinkLocalManager_get();
  public final static native int LogAreaAllClasses_get();
  public final static native int LogAreaXmlIncoming_get();
  public final static native int LogAreaXmlOutgoing_get();
  public final static native int LogAreaUser_get();
  public final static native int LogAreaAll_get();
  public final static native int MessageEventOffline_get();
  public final static native int MessageEventDelivered_get();
  public final static native int MessageEventDisplayed_get();
  public final static native int MessageEventComposing_get();
  public final static native int MessageEventInvalid_get();
  public final static native int MessageEventCancel_get();
  public final static native int ChatStateActive_get();
  public final static native int ChatStateComposing_get();
  public final static native int ChatStatePaused_get();
  public final static native int ChatStateInactive_get();
  public final static native int ChatStateGone_get();
  public final static native int ChatStateInvalid_get();
  public final static native int FilterMessageEvents_get();
  public final static native int FilterChatStates_get();
  public final static native int FlagPasswordProtected_get();
  public final static native int FlagPublicLogging_get();
  public final static native int FlagPublicLoggingOff_get();
  public final static native int FlagHidden_get();
  public final static native int FlagMembersOnly_get();
  public final static native int FlagModerated_get();
  public final static native int FlagNonAnonymous_get();
  public final static native int FlagOpen_get();
  public final static native int FlagPersistent_get();
  public final static native int FlagPublic_get();
  public final static native int FlagSemiAnonymous_get();
  public final static native int FlagTemporary_get();
  public final static native int FlagUnmoderated_get();
  public final static native int FlagUnsecured_get();
  public final static native int FlagFullyAnonymous_get();
  public final static native int UserSelf_get();
  public final static native int UserNickChanged_get();
  public final static native int UserKicked_get();
  public final static native int UserBanned_get();
  public final static native int UserAffiliationChanged_get();
  public final static native int UserRoomDestroyed_get();
  public final static native int UserNickAssigned_get();
  public final static native int UserNewRoom_get();
  public final static native int UserMembershipRequired_get();
  public final static native int UserRoomShutdown_get();
  public final static native int UserAffiliationChangedWNR_get();
  public final static native long new_JID__SWIG_0();
  public final static native long new_JID__SWIG_1(String jarg1);
  public final static native void delete_JID(long jarg1);
  public final static native boolean JID_setJID(long jarg1, JID jarg1_, String jarg2);
  public final static native String JID_full(long jarg1, JID jarg1_);
  public final static native String JID_bare(long jarg1, JID jarg1_);
  public final static native long JID_bareJID(long jarg1, JID jarg1_);
  public final static native boolean JID_setUsername(long jarg1, JID jarg1_, String jarg2);
  public final static native boolean JID_setServer(long jarg1, JID jarg1_, String jarg2);
  public final static native boolean JID_setResource(long jarg1, JID jarg1_, String jarg2);
  public final static native String JID_username(long jarg1, JID jarg1_);
  public final static native String JID_server(long jarg1, JID jarg1_);
  public final static native String JID_serverRaw(long jarg1, JID jarg1_);
  public final static native String JID_resource(long jarg1, JID jarg1_);
  public final static native String JID_escapeNode(String jarg1);
  public final static native String JID_unescapeNode(String jarg1);
  public final static native void delete_Stanza(long jarg1);
  public final static native long Stanza_from(long jarg1, Stanza jarg1_);
  public final static native long Stanza_to(long jarg1, Stanza jarg1_);
  public final static native String Stanza_id(long jarg1, Stanza jarg1_);
  public final static native String Stanza_xmlLang(long jarg1, Stanza jarg1_);
  public final static native int Message_Chat_get();
  public final static native int Message_Error_get();
  public final static native int Message_Groupchat_get();
  public final static native int Message_Headline_get();
  public final static native int Message_Normal_get();
  public final static native int Message_Invalid_get();
  public final static native long new_Message__SWIG_0(int jarg1, long jarg2, JID jarg2_, String jarg3, String jarg4, String jarg5, String jarg6);
  public final static native long new_Message__SWIG_1(int jarg1, long jarg2, JID jarg2_, String jarg3, String jarg4, String jarg5);
  public final static native long new_Message__SWIG_2(int jarg1, long jarg2, JID jarg2_, String jarg3, String jarg4);
  public final static native long new_Message__SWIG_3(int jarg1, long jarg2, JID jarg2_, String jarg3);
  public final static native long new_Message__SWIG_4(int jarg1, long jarg2, JID jarg2_);
  public final static native void delete_Message(long jarg1);
  public final static native int Message_subtype(long jarg1, Message jarg1_);
  public final static native String Message_body__SWIG_0(long jarg1, Message jarg1_, String jarg2);
  public final static native String Message_body__SWIG_1(long jarg1, Message jarg1_);
  public final static native String Message_subject__SWIG_0(long jarg1, Message jarg1_, String jarg2);
  public final static native String Message_subject__SWIG_1(long jarg1, Message jarg1_);
  public final static native String Message_thread(long jarg1, Message jarg1_);
  public final static native void Message_setThread(long jarg1, Message jarg1_, String jarg2);
  public final static native void Message_setID(long jarg1, Message jarg1_, String jarg2);
  public final static native long new_Presence__SWIG_0(int jarg1, long jarg2, JID jarg2_, String jarg3, int jarg4, String jarg5);
  public final static native long new_Presence__SWIG_1(int jarg1, long jarg2, JID jarg2_, String jarg3, int jarg4);
  public final static native long new_Presence__SWIG_2(int jarg1, long jarg2, JID jarg2_, String jarg3);
  public final static native long new_Presence__SWIG_3(int jarg1, long jarg2, JID jarg2_);
  public final static native void delete_Presence(long jarg1);
  public final static native int Presence_subtype(long jarg1, Presence jarg1_);
  public final static native int Presence_presence(long jarg1, Presence jarg1_);
  public final static native void Presence_setPresence(long jarg1, Presence jarg1_, int jarg2);
  public final static native String Presence_status__SWIG_0(long jarg1, Presence jarg1_, String jarg2);
  public final static native String Presence_status__SWIG_1(long jarg1, Presence jarg1_);
  public final static native void Presence_addStatus__SWIG_0(long jarg1, Presence jarg1_, String jarg2, String jarg3);
  public final static native void Presence_addStatus__SWIG_1(long jarg1, Presence jarg1_, String jarg2);
  public final static native void Presence_resetStatus(long jarg1, Presence jarg1_);
  public final static native int Presence_priority(long jarg1, Presence jarg1_);
  public final static native void Presence_setPriority(long jarg1, Presence jarg1_, int jarg2);
  public final static native long new_RosterItem__SWIG_0(String jarg1, String jarg2);
  public final static native long new_RosterItem__SWIG_1(String jarg1);
  public final static native void delete_RosterItem(long jarg1);
  public final static native String RosterItem_name(long jarg1, RosterItem jarg1_);
  public final static native String RosterItem_jid(long jarg1, RosterItem jarg1_);
  public final static native int RosterItem_subscription(long jarg1, RosterItem jarg1_);
  public final static native long RosterItem_groups(long jarg1, RosterItem jarg1_);
  public final static native boolean RosterItem_changed(long jarg1, RosterItem jarg1_);
  public final static native boolean RosterItem_online(long jarg1, RosterItem jarg1_);
  public final static native void delete_Bytestream(long jarg1);
  public final static native boolean Bytestream_isOpen(long jarg1, Bytestream jarg1_);
  public final static native String Bytestream_sid(long jarg1, Bytestream jarg1_);
  public final static native int Bytestream_type(long jarg1, Bytestream jarg1_);
  public final static native long Bytestream_target(long jarg1, Bytestream jarg1_);
  public final static native long Bytestream_initiator(long jarg1, Bytestream jarg1_);
  public final static native int SIProfileFT_FTTypeS5B_get();
  public final static native int SIProfileFT_FTTypeIBB_get();
  public final static native int SIProfileFT_FTTypeOOB_get();
  public final static native int SIProfileFT_FTTypeAll_get();
  public final static native void delete_SIProfileFT(long jarg1);
  public final static native String KLXMPP_VERSION_get();
  public final static native String XMLNS_X_CONFERENCE_get();
  public final static native String XMLNS_AVATAR_DATA_get();
  public final static native String XMLNS_AVATAR_METADATA_get();
  public final static native String XMLNS_MICROBLOG_get();
  public final static native String XMLNS_ATOM_get();
  public final static native String XMLNS_GEOLOC_get();
  public final static native String XMLNS_NEEKLE_PERSONALINFO_get();
  public final static native String XMLNS_NEEKLE_ADDRESSBOOK_get();
  public final static native String XMLNS_NEEKLE_BACKGROUND_get();
  public final static native String XMLNS_NEEKLE_IMAIL_get();
  public final static native String TAG_NAME_ID_get();
  public final static native String TAG_NAME_NAME_get();
  public final static native String TAG_NAME_AVAILABLE_get();
  public final static native String TAG_NAME_BACKGROUND_get();
  public final static native String TAG_NAME_INFO_get();
  public final static native String TAG_NAME_ADDRESSBOOK_get();
  public final static native String ATTRIBUTE_NAME_ID_get();
  public final static native String ATTRIBUTE_NAME_TYPE_get();
  public final static native String ATTRIBUTE_NAME_URL_get();
  public final static native String ATTRIBUTE_NAME_BYTES_get();
  public final static native String ATTRIBUTE_NAME_HEIGHT_get();
  public final static native String ATTRIBUTE_NAME_WIDTH_get();
  public final static native int ExtDirectMUCInvitation_get();
  public final static native int ExtGeoloc_get();
  public final static native int ExtIMailSMTPInfo_get();
  public final static native int ExtMUCRoomRegistration_get();
  public final static native String klxmpp_version();
  public final static native long new_XmppStack__SWIG_0(long jarg1, JID jarg1_, String jarg2, String jarg3, int jarg4);
  public final static native long new_XmppStack__SWIG_1(long jarg1, JID jarg1_, String jarg2, String jarg3);
  public final static native long new_XmppStack__SWIG_2(long jarg1, JID jarg1_, String jarg2);
  public final static native void delete_XmppStack(long jarg1);
  public final static native long XmppStack_jid(long jarg1, XmppStack jarg1_);
  public final static native String XmppStack_password(long jarg1, XmppStack jarg1_);
  public final static native String XmppStack_host(long jarg1, XmppStack jarg1_);
  public final static native int XmppStack_port(long jarg1, XmppStack jarg1_);
  public final static native String XmppStack_localip(long jarg1, XmppStack jarg1_);
  public final static native int XmppStack_localport(long jarg1, XmppStack jarg1_);
  public final static native long XmppStack_mucService(long jarg1, XmppStack jarg1_);
  public final static native long XmppStack_s5bService(long jarg1, XmppStack jarg1_);
  public final static native void XmppStack_enableSelfAsSOCKS5BytestreamServer(long jarg1, XmppStack jarg1_);
  public final static native void XmppStack_disableSelfAsSOCKS5BytestreamServer(long jarg1, XmppStack jarg1_);
  public final static native void XmppStack_disableUseSOCKS5BytestreamProxyServer(long jarg1, XmppStack jarg1_);
  public final static native void XmppStack_enableUseSOCKS5BytestreamProxyServer(long jarg1, XmppStack jarg1_);
  public final static native void XmppStack_setIdentity(long jarg1, XmppStack jarg1_, String jarg2, String jarg3, String jarg4);
  public final static native void XmppStack_queryEntityInfo(long jarg1, XmppStack jarg1_, long jarg2, JID jarg2_);
  public final static native boolean XmppStack_registerXmppCallback(long jarg1, XmppStack jarg1_, long jarg2, XmppCallback jarg2_);
  public final static native void XmppStack_removeXmppCallback(long jarg1, XmppStack jarg1_, long jarg2, XmppCallback jarg2_);
  public final static native void XmppStack_addS5bStreamHost(long jarg1, XmppStack jarg1_, long jarg2, JID jarg2_, String jarg3, int jarg4);
  public final static native void XmppStack_clearAllS5bStreamHosts(long jarg1, XmppStack jarg1_);
  public final static native void XmppStack_login(long jarg1, XmppStack jarg1_);
  public final static native boolean XmppStack_isLogined(long jarg1, XmppStack jarg1_);
  public final static native void XmppStack_logout(long jarg1, XmppStack jarg1_);
  public final static native boolean XmppStack_publishNickname(long jarg1, XmppStack jarg1_, String jarg2);
  public final static native String XmppStack_publishAvatar__SWIG_0(long jarg1, XmppStack jarg1_, String jarg2, String jarg3, int jarg4, String jarg5, int jarg6, int jarg7, String jarg8);
  public final static native String XmppStack_publishAvatar__SWIG_1(long jarg1, XmppStack jarg1_, String jarg2, String jarg3, int jarg4, String jarg5, int jarg6, int jarg7);
  public final static native String XmppStack_publishAvatar__SWIG_2(long jarg1, XmppStack jarg1_, String jarg2, String jarg3, int jarg4, String jarg5, int jarg6);
  public final static native String XmppStack_publishAvatar__SWIG_3(long jarg1, XmppStack jarg1_, String jarg2, String jarg3, int jarg4, String jarg5);
  public final static native void XmppStack_loadAvatar(long jarg1, XmppStack jarg1_, long jarg2, JID jarg2_, String jarg3);
  public final static native boolean XmppStack_sendChatMessage__SWIG_0(long jarg1, XmppStack jarg1_, String jarg2, long jarg3, JID jarg3_, String jarg4, String jarg5, String jarg6, String jarg7, boolean jarg8, boolean jarg9);
  public final static native boolean XmppStack_sendChatMessage__SWIG_1(long jarg1, XmppStack jarg1_, String jarg2, long jarg3, JID jarg3_, String jarg4, String jarg5, String jarg6, String jarg7, boolean jarg8);
  public final static native boolean XmppStack_sendChatMessage__SWIG_2(long jarg1, XmppStack jarg1_, String jarg2, long jarg3, JID jarg3_, String jarg4, String jarg5, String jarg6, String jarg7);
  public final static native boolean XmppStack_sendChatMessage__SWIG_3(long jarg1, XmppStack jarg1_, String jarg2, long jarg3, JID jarg3_, String jarg4, String jarg5, String jarg6);
  public final static native boolean XmppStack_sendChatMessage__SWIG_4(long jarg1, XmppStack jarg1_, String jarg2, long jarg3, JID jarg3_, String jarg4, String jarg5);
  public final static native boolean XmppStack_sendChatMessage__SWIG_5(long jarg1, XmppStack jarg1_, String jarg2, long jarg3, JID jarg3_, String jarg4);
  public final static native boolean XmppStack_sendIMailMessage__SWIG_0(long jarg1, XmppStack jarg1_, String jarg2, long jarg3, JID jarg3_, long jarg4, IMailSMTPInfo jarg4_, boolean jarg5);
  public final static native boolean XmppStack_sendIMailMessage__SWIG_1(long jarg1, XmppStack jarg1_, String jarg2, long jarg3, JID jarg3_, long jarg4, IMailSMTPInfo jarg4_);
  public final static native boolean XmppStack_sendLocationMessage(long jarg1, XmppStack jarg1_, String jarg2, long jarg3, JID jarg3_, long jarg4, Geoloc jarg4_);
  public final static native boolean XmppStack_sendReceiptMessage(long jarg1, XmppStack jarg1_, String jarg2, long jarg3, JID jarg3_, String jarg4);
  public final static native boolean XmppStack_sendAttentionMessage(long jarg1, XmppStack jarg1_, String jarg2, long jarg3, JID jarg3_);
  public final static native boolean XmppStack_sendPresence__SWIG_0(long jarg1, XmppStack jarg1_, int jarg2, String jarg3, int jarg4);
  public final static native boolean XmppStack_sendPresence__SWIG_1(long jarg1, XmppStack jarg1_, int jarg2, String jarg3);
  public final static native boolean XmppStack_sendPresence__SWIG_2(long jarg1, XmppStack jarg1_, int jarg2);
  public final static native boolean XmppStack_addRosterItem__SWIG_0(long jarg1, XmppStack jarg1_, long jarg2, JID jarg2_, String jarg3, long jarg4, StringList jarg4_, boolean jarg5, String jarg6);
  public final static native boolean XmppStack_addRosterItem__SWIG_1(long jarg1, XmppStack jarg1_, long jarg2, JID jarg2_, String jarg3, long jarg4, StringList jarg4_, boolean jarg5);
  public final static native boolean XmppStack_moveRosterItemToGroup(long jarg1, XmppStack jarg1_, long jarg2, JID jarg2_, String jarg3);
  public final static native boolean XmppStack_moveRosterItemToGroups(long jarg1, XmppStack jarg1_, long jarg2, JID jarg2_, long jarg3, StringList jarg3_);
  public final static native boolean XmppStack_copyRosterItemToGroup(long jarg1, XmppStack jarg1_, long jarg2, JID jarg2_, String jarg3);
  public final static native boolean XmppStack_copyRosterItemToGroups(long jarg1, XmppStack jarg1_, long jarg2, JID jarg2_, long jarg3, StringList jarg3_);
  public final static native boolean XmppStack_removeRosterItemFromGroup(long jarg1, XmppStack jarg1_, long jarg2, JID jarg2_, String jarg3);
  public final static native boolean XmppStack_removeRosterItemFromGroups(long jarg1, XmppStack jarg1_, long jarg2, JID jarg2_, long jarg3, StringList jarg3_);
  public final static native boolean XmppStack_removeRosterItemFromAllGroups(long jarg1, XmppStack jarg1_, long jarg2, JID jarg2_);
  public final static native boolean XmppStack_changeRosterItemName(long jarg1, XmppStack jarg1_, long jarg2, JID jarg2_, String jarg3);
  public final static native boolean XmppStack_updateRosterItem(long jarg1, XmppStack jarg1_, long jarg2, JID jarg2_, String jarg3, long jarg4, StringList jarg4_);
  public final static native boolean XmppStack_deleteRosterItem(long jarg1, XmppStack jarg1_, long jarg2, JID jarg2_);
  public final static native boolean XmppStack_subscribeRosterItem__SWIG_0(long jarg1, XmppStack jarg1_, long jarg2, JID jarg2_, String jarg3);
  public final static native boolean XmppStack_subscribeRosterItem__SWIG_1(long jarg1, XmppStack jarg1_, long jarg2, JID jarg2_);
  public final static native boolean XmppStack_approveSubscription__SWIG_0(long jarg1, XmppStack jarg1_, long jarg2, JID jarg2_, boolean jarg3);
  public final static native boolean XmppStack_approveSubscription__SWIG_1(long jarg1, XmppStack jarg1_, long jarg2, JID jarg2_);
  public final static native boolean XmppStack_denySubscription__SWIG_0(long jarg1, XmppStack jarg1_, long jarg2, JID jarg2_, boolean jarg3);
  public final static native boolean XmppStack_denySubscription__SWIG_1(long jarg1, XmppStack jarg1_, long jarg2, JID jarg2_);
  public final static native String XmppStack_publish(long jarg1, XmppStack jarg1_, long jarg2, Microblog jarg2_);
  public final static native String XmppStack_deleteMicroblog(long jarg1, XmppStack jarg1_, String jarg2);
  public final static native void XmppStack_createMUCRoom(long jarg1, XmppStack jarg1_, long jarg2, JID jarg2_, long jarg3, MUCRoomConfig jarg3_);
  public final static native void XmppStack_destroyMUCRoom(long jarg1, XmppStack jarg1_, long jarg2, JID jarg2_);
  public final static native void XmppStack_modifyMUCRoomMemberList(long jarg1, XmppStack jarg1_, long jarg2, JID jarg2_, long jarg3, StringList jarg3_);
  public final static native void XmppStack_requestMUCRoomMemberList(long jarg1, XmppStack jarg1_, long jarg2, JID jarg2_);
  public final static native void XmppStack_modifyMUCRoomOwnerList(long jarg1, XmppStack jarg1_, long jarg2, JID jarg2_, long jarg3, StringList jarg3_);
  public final static native void XmppStack_requestMUCRoomOwnerList(long jarg1, XmppStack jarg1_, long jarg2, JID jarg2_);
  public final static native void XmppStack_enterMUCRoom__SWIG_0(long jarg1, XmppStack jarg1_, long jarg2, JID jarg2_, String jarg3, int jarg4, String jarg5, int jarg6, String jarg7, boolean jarg8);
  public final static native void XmppStack_enterMUCRoom__SWIG_1(long jarg1, XmppStack jarg1_, long jarg2, JID jarg2_, String jarg3, int jarg4, String jarg5, int jarg6, String jarg7);
  public final static native void XmppStack_enterMUCRoom__SWIG_2(long jarg1, XmppStack jarg1_, long jarg2, JID jarg2_, String jarg3, int jarg4, String jarg5, int jarg6);
  public final static native void XmppStack_enterMUCRoom__SWIG_3(long jarg1, XmppStack jarg1_, long jarg2, JID jarg2_, String jarg3, int jarg4, String jarg5);
  public final static native void XmppStack_enterMUCRoom__SWIG_4(long jarg1, XmppStack jarg1_, long jarg2, JID jarg2_, String jarg3, int jarg4);
  public final static native void XmppStack_enterMUCRoom__SWIG_5(long jarg1, XmppStack jarg1_, long jarg2, JID jarg2_, String jarg3);
  public final static native void XmppStack_enterMUCRoom__SWIG_6(long jarg1, XmppStack jarg1_, long jarg2, JID jarg2_);
  public final static native void XmppStack_configMUCRoom(long jarg1, XmppStack jarg1_, long jarg2, JID jarg2_, long jarg3, MUCRoomConfig jarg3_);
  public final static native void XmppStack_queryMUCRoomInfo(long jarg1, XmppStack jarg1_, long jarg2, JID jarg2_);
  public final static native void XmppStack_queryMUCRoomConfig(long jarg1, XmppStack jarg1_, long jarg2, JID jarg2_);
  public final static native void XmppStack_grantMUCRoomMembership__SWIG_0(long jarg1, XmppStack jarg1_, long jarg2, JID jarg2_, long jarg3, JID jarg3_);
  public final static native void XmppStack_grantMUCRoomMembership__SWIG_1(long jarg1, XmppStack jarg1_, long jarg2, JID jarg2_, String jarg3, String jarg4);
  public final static native void XmppStack_grantMUCRoomMembership__SWIG_2(long jarg1, XmppStack jarg1_, long jarg2, JID jarg2_, String jarg3);
  public final static native void XmppStack_revokeMUCRoomMembership(long jarg1, XmppStack jarg1_, long jarg2, JID jarg2_, long jarg3, JID jarg3_);
  public final static native void XmppStack_revokeMUCRoomOwnership(long jarg1, XmppStack jarg1_, long jarg2, JID jarg2_, long jarg3, JID jarg3_);
  public final static native void XmppStack_exitMUCRoom__SWIG_0(long jarg1, XmppStack jarg1_, long jarg2, JID jarg2_, String jarg3);
  public final static native void XmppStack_exitMUCRoom__SWIG_1(long jarg1, XmppStack jarg1_, long jarg2, JID jarg2_);
  public final static native void XmppStack_inviteIntoMUCRoom__SWIG_0(long jarg1, XmppStack jarg1_, long jarg2, JID jarg2_, long jarg3, JID jarg3_, int jarg4, String jarg5, boolean jarg6, boolean jarg7);
  public final static native void XmppStack_inviteIntoMUCRoom__SWIG_1(long jarg1, XmppStack jarg1_, long jarg2, JID jarg2_, long jarg3, JID jarg3_, int jarg4, String jarg5, boolean jarg6);
  public final static native void XmppStack_inviteIntoMUCRoom__SWIG_2(long jarg1, XmppStack jarg1_, long jarg2, JID jarg2_, long jarg3, JID jarg3_, int jarg4, String jarg5);
  public final static native void XmppStack_inviteIntoMUCRoom__SWIG_3(long jarg1, XmppStack jarg1_, long jarg2, JID jarg2_, long jarg3, JID jarg3_, int jarg4);
  public final static native void XmppStack_inviteIntoMUCRoom__SWIG_4(long jarg1, XmppStack jarg1_, long jarg2, JID jarg2_, long jarg3, JID jarg3_);
  public final static native void XmppStack_rejectMUCRoomInvitation__SWIG_0(long jarg1, XmppStack jarg1_, long jarg2, JID jarg2_, long jarg3, JID jarg3_, String jarg4);
  public final static native void XmppStack_rejectMUCRoomInvitation__SWIG_1(long jarg1, XmppStack jarg1_, long jarg2, JID jarg2_, long jarg3, JID jarg3_);
  public final static native void XmppStack_changeSelfNicknameInMUCRoom(long jarg1, XmppStack jarg1_, long jarg2, JID jarg2_, String jarg3);
  public final static native void XmppStack_requestMUCRoomVoice(long jarg1, XmppStack jarg1_, long jarg2, JID jarg2_);
  public final static native void XmppStack_grantMUCRoomVoice__SWIG_0(long jarg1, XmppStack jarg1_, long jarg2, JID jarg2_, String jarg3, String jarg4);
  public final static native void XmppStack_grantMUCRoomVoice__SWIG_1(long jarg1, XmppStack jarg1_, long jarg2, JID jarg2_, String jarg3);
  public final static native void XmppStack_revokeMUCRoomVoice__SWIG_0(long jarg1, XmppStack jarg1_, long jarg2, JID jarg2_, String jarg3, String jarg4);
  public final static native void XmppStack_revokeMUCRoomVoice__SWIG_1(long jarg1, XmppStack jarg1_, long jarg2, JID jarg2_, String jarg3);
  public final static native void XmppStack_changeMUCRoomSubject(long jarg1, XmppStack jarg1_, long jarg2, JID jarg2_, String jarg3);
  public final static native void XmppStack_kickOutMUCRoom__SWIG_0(long jarg1, XmppStack jarg1_, long jarg2, JID jarg2_, String jarg3, String jarg4);
  public final static native void XmppStack_kickOutMUCRoom__SWIG_1(long jarg1, XmppStack jarg1_, long jarg2, JID jarg2_, String jarg3);
  public final static native void XmppStack_banOutMUCRoom__SWIG_0(long jarg1, XmppStack jarg1_, long jarg2, JID jarg2_, String jarg3, String jarg4);
  public final static native void XmppStack_banOutMUCRoom__SWIG_1(long jarg1, XmppStack jarg1_, long jarg2, JID jarg2_, String jarg3);
  public final static native void XmppStack_sendMUCRoomMessage__SWIG_0(long jarg1, XmppStack jarg1_, String jarg2, long jarg3, JID jarg3_, String jarg4, String jarg5);
  public final static native void XmppStack_sendMUCRoomMessage__SWIG_1(long jarg1, XmppStack jarg1_, String jarg2, long jarg3, JID jarg3_, String jarg4);
  public final static native void XmppStack_sendMUCRoomLocationMessage(long jarg1, XmppStack jarg1_, String jarg2, long jarg3, JID jarg3_, long jarg4, Geoloc jarg4_);
  public final static native void XmppStack_sendMUCRoomAttentionMessage(long jarg1, XmppStack jarg1_, String jarg2, long jarg3, JID jarg3_);
  public final static native void XmppStack_sendMUCRoomPresence__SWIG_0(long jarg1, XmppStack jarg1_, long jarg2, JID jarg2_, int jarg3, String jarg4);
  public final static native void XmppStack_sendMUCRoomPresence__SWIG_1(long jarg1, XmppStack jarg1_, long jarg2, JID jarg2_, int jarg3);
  public final static native void XmppStack_sendMUCRoomPresence__SWIG_2(long jarg1, XmppStack jarg1_, long jarg2, JID jarg2_);
  public final static native void XmppStack_registerWithMUCRoom(long jarg1, XmppStack jarg1_, long jarg2, JID jarg2_);
  public final static native void XmppStack_acceptFt(long jarg1, XmppStack jarg1_, long jarg2, JID jarg2_, String jarg3, int jarg4);
  public final static native void XmppStack_rejectFt__SWIG_0(long jarg1, XmppStack jarg1_, long jarg2, JID jarg2_, String jarg3, String jarg4);
  public final static native void XmppStack_rejectFt__SWIG_1(long jarg1, XmppStack jarg1_, long jarg2, JID jarg2_, String jarg3);
  public final static native int XmppStack_recvS5bFtData(long jarg1, XmppStack jarg1_, String jarg2);
  public final static native boolean XmppStack_sendFtData(long jarg1, XmppStack jarg1_, long jarg2, SID jarg2_, byte[] jarg3, int jarg4);
  public final static native String XmppStack_requestFt(long jarg1, XmppStack jarg1_, String jarg2, long jarg3, JID jarg3_, int jarg4, long jarg5, FileMetadata jarg5_);
  public final static native boolean XmppStack_closeFtBytestream(long jarg1, XmppStack jarg1_, String jarg2);
  public final static native boolean XmppStack_isBytestreamOpened(long jarg1, XmppStack jarg1_, String jarg2);
  public final static native String XmppStack_notifyAddressBookChanged(long jarg1, XmppStack jarg1_, String jarg2, String jarg3, boolean jarg4);
  public final static native void delete_XmppCallback(long jarg1);
  public final static native void XmppCallback_onLog(long jarg1, XmppCallback jarg1_, int jarg2, int jarg3, String jarg4);
  public final static native void XmppCallback_onLogSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_, int jarg2, int jarg3, String jarg4);
  public final static native void XmppCallback_onInvaildJID(long jarg1, XmppCallback jarg1_);
  public final static native void XmppCallback_onInvaildJIDSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_);
  public final static native void XmppCallback_onInvaildPassword(long jarg1, XmppCallback jarg1_);
  public final static native void XmppCallback_onInvaildPasswordSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_);
  public final static native void XmppCallback_onTcpConnSuccess(long jarg1, XmppCallback jarg1_);
  public final static native void XmppCallback_onTcpConnSuccessSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_);
  public final static native void XmppCallback_onTcpConnFailed(long jarg1, XmppCallback jarg1_, int jarg2);
  public final static native void XmppCallback_onTcpConnFailedSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_, int jarg2);
  public final static native void XmppCallback_onNegotiatingEncryption(long jarg1, XmppCallback jarg1_);
  public final static native void XmppCallback_onNegotiatingEncryptionSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_);
  public final static native void XmppCallback_onNegotiatingCompression(long jarg1, XmppCallback jarg1_);
  public final static native void XmppCallback_onNegotiatingCompressionSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_);
  public final static native void XmppCallback_onAuthenticating(long jarg1, XmppCallback jarg1_);
  public final static native void XmppCallback_onAuthenticatingSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_);
  public final static native void XmppCallback_onAuthFailed(long jarg1, XmppCallback jarg1_);
  public final static native void XmppCallback_onAuthFailedSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_);
  public final static native void XmppCallback_onBindingResource(long jarg1, XmppCallback jarg1_);
  public final static native void XmppCallback_onBindingResourceSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_);
  public final static native void XmppCallback_onCreatingSession(long jarg1, XmppCallback jarg1_);
  public final static native void XmppCallback_onCreatingSessionSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_);
  public final static native void XmppCallback_onLoadingRoster(long jarg1, XmppCallback jarg1_);
  public final static native void XmppCallback_onLoadingRosterSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_);
  public final static native void XmppCallback_onLoginSuccess(long jarg1, XmppCallback jarg1_);
  public final static native void XmppCallback_onLoginSuccessSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_);
  public final static native void XmppCallback_onDiscoMucService(long jarg1, XmppCallback jarg1_, long jarg2, JID jarg2_);
  public final static native void XmppCallback_onDiscoMucServiceSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_, long jarg2, JID jarg2_);
  public final static native void XmppCallback_onDiscoS5BService(long jarg1, XmppCallback jarg1_, long jarg2, JID jarg2_);
  public final static native void XmppCallback_onDiscoS5BServiceSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_, long jarg2, JID jarg2_);
  public final static native void XmppCallback_onRetrieveEntityInfo(long jarg1, XmppCallback jarg1_, long jarg2, JID jarg2_, long jarg3, EntityInfo jarg3_);
  public final static native void XmppCallback_onRetrieveEntityInfoSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_, long jarg2, JID jarg2_, long jarg3, EntityInfo jarg3_);
  public final static native void XmppCallback_onLogoutSuccess(long jarg1, XmppCallback jarg1_);
  public final static native void XmppCallback_onLogoutSuccessSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_);
  public final static native void XmppCallback_onRecvSelfPresence(long jarg1, XmppCallback jarg1_, long jarg2, RosterItem jarg2_, String jarg3, int jarg4, String jarg5);
  public final static native void XmppCallback_onRecvSelfPresenceSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_, long jarg2, RosterItem jarg2_, String jarg3, int jarg4, String jarg5);
  public final static native void XmppCallback_onRecvRosterPresence(long jarg1, XmppCallback jarg1_, long jarg2, RosterItem jarg2_, String jarg3, int jarg4, String jarg5);
  public final static native void XmppCallback_onRecvRosterPresenceSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_, long jarg2, RosterItem jarg2_, String jarg3, int jarg4, String jarg5);
  public final static native void XmppCallback_onRecvChatMessage(long jarg1, XmppCallback jarg1_, long jarg2, Message jarg2_, String jarg3, boolean jarg4);
  public final static native void XmppCallback_onRecvChatMessageSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_, long jarg2, Message jarg2_, String jarg3, boolean jarg4);
  public final static native void XmppCallback_onRecvAttentionMessage(long jarg1, XmppCallback jarg1_, String jarg2, long jarg3, JID jarg3_);
  public final static native void XmppCallback_onRecvAttentionMessageSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_, String jarg2, long jarg3, JID jarg3_);
  public final static native void XmppCallback_onRecvIMailMessage(long jarg1, XmppCallback jarg1_, String jarg2, long jarg3, JID jarg3_, long jarg4, IMailSMTPInfo jarg4_, boolean jarg5);
  public final static native void XmppCallback_onRecvIMailMessageSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_, String jarg2, long jarg3, JID jarg3_, long jarg4, IMailSMTPInfo jarg4_, boolean jarg5);
  public final static native void XmppCallback_onRecvLocationMessage(long jarg1, XmppCallback jarg1_, String jarg2, long jarg3, JID jarg3_, long jarg4, Geoloc jarg4_);
  public final static native void XmppCallback_onRecvLocationMessageSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_, String jarg2, long jarg3, JID jarg3_, long jarg4, Geoloc jarg4_);
  public final static native void XmppCallback_onRecvReceiptMessage(long jarg1, XmppCallback jarg1_, String jarg2, long jarg3, JID jarg3_, String jarg4);
  public final static native void XmppCallback_onRecvReceiptMessageSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_, String jarg2, long jarg3, JID jarg3_, String jarg4);
  public final static native void XmppCallback_onRecvRoster(long jarg1, XmppCallback jarg1_, long jarg2, Roster jarg2_);
  public final static native void XmppCallback_onRecvRosterSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_, long jarg2, Roster jarg2_);
  public final static native void XmppCallback_onRosterItemAdded(long jarg1, XmppCallback jarg1_, long jarg2, RosterItem jarg2_);
  public final static native void XmppCallback_onRosterItemAddedSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_, long jarg2, RosterItem jarg2_);
  public final static native void XmppCallback_onRosterItemUpdated(long jarg1, XmppCallback jarg1_, long jarg2, RosterItem jarg2_);
  public final static native void XmppCallback_onRosterItemUpdatedSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_, long jarg2, RosterItem jarg2_);
  public final static native void XmppCallback_onRosterItemRemoved(long jarg1, XmppCallback jarg1_, long jarg2, RosterItem jarg2_);
  public final static native void XmppCallback_onRosterItemRemovedSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_, long jarg2, RosterItem jarg2_);
  public final static native void XmppCallback_onRosterItemSubscribed(long jarg1, XmppCallback jarg1_, long jarg2, RosterItem jarg2_);
  public final static native void XmppCallback_onRosterItemSubscribedSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_, long jarg2, RosterItem jarg2_);
  public final static native void XmppCallback_onRosterItemUnsubscribed(long jarg1, XmppCallback jarg1_, long jarg2, RosterItem jarg2_);
  public final static native void XmppCallback_onRosterItemUnsubscribedSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_, long jarg2, RosterItem jarg2_);
  public final static native void XmppCallback_onRecvSubscriptionRequest(long jarg1, XmppCallback jarg1_, long jarg2, JID jarg2_, String jarg3);
  public final static native void XmppCallback_onRecvSubscriptionRequestSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_, long jarg2, JID jarg2_, String jarg3);
  public final static native void XmppCallback_onRetrieveRegistrationInfo(long jarg1, XmppCallback jarg1_, String jarg2, String jarg3, String jarg4);
  public final static native void XmppCallback_onRetrieveRegistrationInfoSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_, String jarg2, String jarg3, String jarg4);
  public final static native void XmppCallback_onPublishNicknameSuccess(long jarg1, XmppCallback jarg1_, String jarg2);
  public final static native void XmppCallback_onPublishNicknameSuccessSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_, String jarg2);
  public final static native void XmppCallback_onPublishNicknameFailed(long jarg1, XmppCallback jarg1_, String jarg2);
  public final static native void XmppCallback_onPublishNicknameFailedSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_, String jarg2);
  public final static native void XmppCallback_onRecvNickname(long jarg1, XmppCallback jarg1_, long jarg2, JID jarg2_, String jarg3);
  public final static native void XmppCallback_onRecvNicknameSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_, long jarg2, JID jarg2_, String jarg3);
  public final static native void XmppCallback_onPublishAvatarSuccess(long jarg1, XmppCallback jarg1_, String jarg2);
  public final static native void XmppCallback_onPublishAvatarSuccessSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_, String jarg2);
  public final static native void XmppCallback_onPublishAvatarFailed(long jarg1, XmppCallback jarg1_, String jarg2);
  public final static native void XmppCallback_onPublishAvatarFailedSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_, String jarg2);
  public final static native void XmppCallback_onRecvAvatarMetadata(long jarg1, XmppCallback jarg1_, long jarg2, JID jarg2_, long jarg3, AvatarMetadata jarg3_);
  public final static native void XmppCallback_onRecvAvatarMetadataSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_, long jarg2, JID jarg2_, long jarg3, AvatarMetadata jarg3_);
  public final static native void XmppCallback_onRecvAvatarData(long jarg1, XmppCallback jarg1_, long jarg2, JID jarg2_, String jarg3, String jarg4);
  public final static native void XmppCallback_onRecvAvatarDataSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_, long jarg2, JID jarg2_, String jarg3, String jarg4);
  public final static native void XmppCallback_onLoadAvatarSuccess(long jarg1, XmppCallback jarg1_, long jarg2, JID jarg2_, String jarg3, String jarg4);
  public final static native void XmppCallback_onLoadAvatarSuccessSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_, long jarg2, JID jarg2_, String jarg3, String jarg4);
  public final static native void XmppCallback_onLoadAvatarFailed(long jarg1, XmppCallback jarg1_, long jarg2, JID jarg2_, String jarg3);
  public final static native void XmppCallback_onLoadAvatarFailedSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_, long jarg2, JID jarg2_, String jarg3);
  public final static native void XmppCallback_onNotifyPersonalInfoChangedSuccess(long jarg1, XmppCallback jarg1_, String jarg2);
  public final static native void XmppCallback_onNotifyPersonalInfoChangedSuccessSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_, String jarg2);
  public final static native void XmppCallback_onNotifyPersonalInfoChangedFailed(long jarg1, XmppCallback jarg1_, String jarg2);
  public final static native void XmppCallback_onNotifyPersonalInfoChangedFailedSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_, String jarg2);
  public final static native void XmppCallback_onRecvPersonalInfoChangedNotification(long jarg1, XmppCallback jarg1_, long jarg2, JID jarg2_);
  public final static native void XmppCallback_onRecvPersonalInfoChangedNotificationSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_, long jarg2, JID jarg2_);
  public final static native void XmppCallback_onNotifyAddressBookChangedSuccess(long jarg1, XmppCallback jarg1_, String jarg2);
  public final static native void XmppCallback_onNotifyAddressBookChangedSuccessSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_, String jarg2);
  public final static native void XmppCallback_onNotifyAddressBookChangedFailed(long jarg1, XmppCallback jarg1_, String jarg2);
  public final static native void XmppCallback_onNotifyAddressBookChangedFailedSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_, String jarg2);
  public final static native void XmppCallback_onRecvAddressBookChangedNotification(long jarg1, XmppCallback jarg1_, long jarg2, JID jarg2_, long jarg3, AddressBookInfo jarg3_);
  public final static native void XmppCallback_onRecvAddressBookChangedNotificationSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_, long jarg2, JID jarg2_, long jarg3, AddressBookInfo jarg3_);
  public final static native void XmppCallback_onRecvBackgroundChangedNotification(long jarg1, XmppCallback jarg1_, long jarg2, JID jarg2_, long jarg3, BackgroundInfo jarg3_);
  public final static native void XmppCallback_onRecvBackgroundChangedNotificationSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_, long jarg2, JID jarg2_, long jarg3, BackgroundInfo jarg3_);
  public final static native void XmppCallback_onPublishMicroblogSuccess(long jarg1, XmppCallback jarg1_, String jarg2);
  public final static native void XmppCallback_onPublishMicroblogSuccessSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_, String jarg2);
  public final static native void XmppCallback_onPublishMicroblogFailed(long jarg1, XmppCallback jarg1_, String jarg2);
  public final static native void XmppCallback_onPublishMicroblogFailedSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_, String jarg2);
  public final static native void XmppCallback_onDeleteMicroblogSuccess(long jarg1, XmppCallback jarg1_, String jarg2);
  public final static native void XmppCallback_onDeleteMicroblogSuccessSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_, String jarg2);
  public final static native void XmppCallback_onDeleteMicroblogFailed(long jarg1, XmppCallback jarg1_, String jarg2);
  public final static native void XmppCallback_onDeleteMicroblogFailedSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_, String jarg2);
  public final static native void XmppCallback_onRecvMicroblog(long jarg1, XmppCallback jarg1_, long jarg2, Microblog jarg2_);
  public final static native void XmppCallback_onRecvMicroblogSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_, long jarg2, Microblog jarg2_);
  public final static native void XmppCallback_onMicroblogDeleted(long jarg1, XmppCallback jarg1_, String jarg2);
  public final static native void XmppCallback_onMicroblogDeletedSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_, String jarg2);
  public final static native void XmppCallback_onCreateMUCRoomSuccess(long jarg1, XmppCallback jarg1_, long jarg2, JID jarg2_);
  public final static native void XmppCallback_onCreateMUCRoomSuccessSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_, long jarg2, JID jarg2_);
  public final static native void XmppCallback_onCreateMUCRoomFailed(long jarg1, XmppCallback jarg1_, long jarg2, JID jarg2_, int jarg3);
  public final static native void XmppCallback_onCreateMUCRoomFailedSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_, long jarg2, JID jarg2_, int jarg3);
  public final static native void XmppCallback_onConfigMUCRoomSuccess(long jarg1, XmppCallback jarg1_, long jarg2, JID jarg2_);
  public final static native void XmppCallback_onConfigMUCRoomSuccessSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_, long jarg2, JID jarg2_);
  public final static native void XmppCallback_onConfigMUCRoomFailed(long jarg1, XmppCallback jarg1_, long jarg2, JID jarg2_);
  public final static native void XmppCallback_onConfigMUCRoomFailedSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_, long jarg2, JID jarg2_);
  public final static native void XmppCallback_onDestroyMUCRoomSuccess(long jarg1, XmppCallback jarg1_, long jarg2, JID jarg2_);
  public final static native void XmppCallback_onDestroyMUCRoomSuccessSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_, long jarg2, JID jarg2_);
  public final static native void XmppCallback_onDestroyMUCRoomFailed(long jarg1, XmppCallback jarg1_, long jarg2, JID jarg2_);
  public final static native void XmppCallback_onDestroyMUCRoomFailedSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_, long jarg2, JID jarg2_);
  public final static native void XmppCallback_onRecvMUCRoomPresence(long jarg1, XmppCallback jarg1_, long jarg2, JID jarg2_, String jarg3, String jarg4, long jarg5, JID jarg5_, long jarg6, Presence jarg6_, int jarg7, int jarg8);
  public final static native void XmppCallback_onRecvMUCRoomPresenceSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_, long jarg2, JID jarg2_, String jarg3, String jarg4, long jarg5, JID jarg5_, long jarg6, Presence jarg6_, int jarg7, int jarg8);
  public final static native void XmppCallback_onRecvMUCRoomChatMessage(long jarg1, XmppCallback jarg1_, long jarg2, JID jarg2_, String jarg3, long jarg4, Message jarg4_, String jarg5);
  public final static native void XmppCallback_onRecvMUCRoomChatMessageSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_, long jarg2, JID jarg2_, String jarg3, long jarg4, Message jarg4_, String jarg5);
  public final static native void XmppCallback_onRecvMUCRoomLocationMessage(long jarg1, XmppCallback jarg1_, String jarg2, long jarg3, JID jarg3_, String jarg4, long jarg5, Geoloc jarg5_);
  public final static native void XmppCallback_onRecvMUCRoomLocationMessageSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_, String jarg2, long jarg3, JID jarg3_, String jarg4, long jarg5, Geoloc jarg5_);
  public final static native void XmppCallback_onRecvMUCRoomAttentionMessage(long jarg1, XmppCallback jarg1_, String jarg2, long jarg3, JID jarg3_, String jarg4);
  public final static native void XmppCallback_onRecvMUCRoomAttentionMessageSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_, String jarg2, long jarg3, JID jarg3_, String jarg4);
  public final static native void XmppCallback_onModifyMUCRoomMemberListSuccess(long jarg1, XmppCallback jarg1_, long jarg2, JID jarg2_);
  public final static native void XmppCallback_onModifyMUCRoomMemberListSuccessSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_, long jarg2, JID jarg2_);
  public final static native void XmppCallback_onModifyMUCRoomMemberListFailed(long jarg1, XmppCallback jarg1_, long jarg2, JID jarg2_);
  public final static native void XmppCallback_onModifyMUCRoomMemberListFailedSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_, long jarg2, JID jarg2_);
  public final static native void XmppCallback_onModifyMUCRoomOwnerListSuccess(long jarg1, XmppCallback jarg1_, long jarg2, JID jarg2_);
  public final static native void XmppCallback_onModifyMUCRoomOwnerListSuccessSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_, long jarg2, JID jarg2_);
  public final static native void XmppCallback_onModifyMUCRoomOwnerListFailed(long jarg1, XmppCallback jarg1_, long jarg2, JID jarg2_);
  public final static native void XmppCallback_onModifyMUCRoomOwnerListFailedSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_, long jarg2, JID jarg2_);
  public final static native void XmppCallback_onRecvMUCRoomDirectInvitation(long jarg1, XmppCallback jarg1_, long jarg2, JID jarg2_, long jarg3, JID jarg3_, String jarg4);
  public final static native void XmppCallback_onRecvMUCRoomDirectInvitationSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_, long jarg2, JID jarg2_, long jarg3, JID jarg3_, String jarg4);
  public final static native void XmppCallback_onRecvMUCRoomMediatedInvitation(long jarg1, XmppCallback jarg1_, long jarg2, JID jarg2_, long jarg3, JID jarg3_, String jarg4);
  public final static native void XmppCallback_onRecvMUCRoomMediatedInvitationSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_, long jarg2, JID jarg2_, long jarg3, JID jarg3_, String jarg4);
  public final static native void XmppCallback_onRetrieveMUCRoomMemberList(long jarg1, XmppCallback jarg1_, long jarg2, JID jarg2_, long jarg3, StringList jarg3_);
  public final static native void XmppCallback_onRetrieveMUCRoomMemberListSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_, long jarg2, JID jarg2_, long jarg3, StringList jarg3_);
  public final static native void XmppCallback_onRetrieveMUCRoomOwnerList(long jarg1, XmppCallback jarg1_, long jarg2, JID jarg2_, long jarg3, StringList jarg3_);
  public final static native void XmppCallback_onRetrieveMUCRoomOwnerListSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_, long jarg2, JID jarg2_, long jarg3, StringList jarg3_);
  public final static native void XmppCallback_onMUCRoomSubjectChanged(long jarg1, XmppCallback jarg1_, long jarg2, JID jarg2_, String jarg3, String jarg4);
  public final static native void XmppCallback_onMUCRoomSubjectChangedSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_, long jarg2, JID jarg2_, String jarg3, String jarg4);
  public final static native void XmppCallback_onRetrieveMUCRoomInfo(long jarg1, XmppCallback jarg1_, long jarg2, JID jarg2_, long jarg3, MUCRoomInfo jarg3_);
  public final static native void XmppCallback_onRetrieveMUCRoomInfoSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_, long jarg2, JID jarg2_, long jarg3, MUCRoomInfo jarg3_);
  public final static native void XmppCallback_onRetrieveMUCRoomConfig(long jarg1, XmppCallback jarg1_, long jarg2, JID jarg2_, long jarg3, MUCRoomConfig jarg3_);
  public final static native void XmppCallback_onRetrieveMUCRoomConfigSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_, long jarg2, JID jarg2_, long jarg3, MUCRoomConfig jarg3_);
  public final static native void XmppCallback_onMUCRoomInvitationRejected(long jarg1, XmppCallback jarg1_, long jarg2, JID jarg2_, long jarg3, JID jarg3_, String jarg4);
  public final static native void XmppCallback_onMUCRoomInvitationRejectedSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_, long jarg2, JID jarg2_, long jarg3, JID jarg3_, String jarg4);
  public final static native void XmppCallback_onChangeMUCNicknameConflict(long jarg1, XmppCallback jarg1_, long jarg2, JID jarg2_);
  public final static native void XmppCallback_onChangeMUCNicknameConflictSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_, long jarg2, JID jarg2_);
  public final static native void XmppCallback_onFtRequest(long jarg1, XmppCallback jarg1_, long jarg2, JID jarg2_, String jarg3, long jarg4, FileMetadata jarg4_, boolean jarg5, boolean jarg6, boolean jarg7);
  public final static native void XmppCallback_onFtRequestSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_, long jarg2, JID jarg2_, String jarg3, long jarg4, FileMetadata jarg4_, boolean jarg5, boolean jarg6, boolean jarg7);
  public final static native void XmppCallback_onFtRquestRejected(long jarg1, XmppCallback jarg1_, String jarg2);
  public final static native void XmppCallback_onFtRquestRejectedSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_, String jarg2);
  public final static native void XmppCallback_onFtRquestError(long jarg1, XmppCallback jarg1_, String jarg2, int jarg3, int jarg4);
  public final static native void XmppCallback_onFtRquestErrorSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_, String jarg2, int jarg3, int jarg4);
  public final static native void XmppCallback_onFtIncomingBytestreamCreated(long jarg1, XmppCallback jarg1_, String jarg2, int jarg3, long jarg4, JID jarg4_);
  public final static native void XmppCallback_onFtIncomingBytestreamCreatedSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_, String jarg2, int jarg3, long jarg4, JID jarg4_);
  public final static native void XmppCallback_onFtOutgoingBytestreamCreated(long jarg1, XmppCallback jarg1_, String jarg2, int jarg3, long jarg4, JID jarg4_);
  public final static native void XmppCallback_onFtOutgoingBytestreamCreatedSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_, String jarg2, int jarg3, long jarg4, JID jarg4_);
  public final static native void XmppCallback_onFtIncomingBytestreamOpened(long jarg1, XmppCallback jarg1_, String jarg2);
  public final static native void XmppCallback_onFtIncomingBytestreamOpenedSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_, String jarg2);
  public final static native void XmppCallback_onFtOutgoingBytestreamOpened(long jarg1, XmppCallback jarg1_, String jarg2);
  public final static native void XmppCallback_onFtOutgoingBytestreamOpenedSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_, String jarg2);
  public final static native void XmppCallback_onRecvFtBytestreamData__SWIG_0(long jarg1, XmppCallback jarg1_, String jarg2, long jarg3, BytestreamData jarg3_);
  public final static native void XmppCallback_onRecvFtBytestreamDataSwigExplicitXmppCallback__SWIG_0(long jarg1, XmppCallback jarg1_, String jarg2, long jarg3, BytestreamData jarg3_);
  public final static native void XmppCallback_onRecvFtBytestreamData__SWIG_1(long jarg1, XmppCallback jarg1_, long jarg2, SID jarg2_, long jarg3, BytestreamData jarg3_);
  public final static native void XmppCallback_onRecvFtBytestreamDataSwigExplicitXmppCallback__SWIG_1(long jarg1, XmppCallback jarg1_, long jarg2, SID jarg2_, long jarg3, BytestreamData jarg3_);
  public final static native void XmppCallback_onFtBytestreamClosed(long jarg1, XmppCallback jarg1_, String jarg2);
  public final static native void XmppCallback_onFtBytestreamClosedSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_, String jarg2);
  public final static native void XmppCallback_onDiscoItem(long jarg1, XmppCallback jarg1_, long jarg2, JID jarg2_, long jarg3, JID jarg3_, String jarg4, String jarg5);
  public final static native void XmppCallback_onDiscoItemSwigExplicitXmppCallback(long jarg1, XmppCallback jarg1_, long jarg2, JID jarg2_, long jarg3, JID jarg3_, String jarg4, String jarg5);
  public final static native long new_XmppCallback();
  public final static native void XmppCallback_director_connect(XmppCallback obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void XmppCallback_change_ownership(XmppCallback obj, long cptr, boolean take_or_release);
  public final static native long new_AvatarMetadata(String jarg1, int jarg2, String jarg3);
  public final static native void delete_AvatarMetadata(long jarg1);
  public final static native String AvatarMetadata_id(long jarg1, AvatarMetadata jarg1_);
  public final static native String AvatarMetadata_url(long jarg1, AvatarMetadata jarg1_);
  public final static native int AvatarMetadata_bytes(long jarg1, AvatarMetadata jarg1_);
  public final static native int AvatarMetadata_height(long jarg1, AvatarMetadata jarg1_);
  public final static native int AvatarMetadata_width(long jarg1, AvatarMetadata jarg1_);
  public final static native String AvatarMetadata_type(long jarg1, AvatarMetadata jarg1_);
  public final static native void AvatarMetadata_setUrl(long jarg1, AvatarMetadata jarg1_, String jarg2);
  public final static native void AvatarMetadata_setHeight(long jarg1, AvatarMetadata jarg1_, int jarg2);
  public final static native void AvatarMetadata_setWidth(long jarg1, AvatarMetadata jarg1_, int jarg2);
  public final static native long new_MUCRoomInfo();
  public final static native void MUCRoomInfo_roomname_set(long jarg1, MUCRoomInfo jarg1_, String jarg2);
  public final static native String MUCRoomInfo_roomname_get(long jarg1, MUCRoomInfo jarg1_);
  public final static native void MUCRoomInfo_roomdesc_set(long jarg1, MUCRoomInfo jarg1_, String jarg2);
  public final static native String MUCRoomInfo_roomdesc_get(long jarg1, MUCRoomInfo jarg1_);
  public final static native void MUCRoomInfo_roomsubject_set(long jarg1, MUCRoomInfo jarg1_, String jarg2);
  public final static native String MUCRoomInfo_roomsubject_get(long jarg1, MUCRoomInfo jarg1_);
  public final static native void MUCRoomInfo_occupants_set(long jarg1, MUCRoomInfo jarg1_, int jarg2);
  public final static native int MUCRoomInfo_occupants_get(long jarg1, MUCRoomInfo jarg1_);
  public final static native void MUCRoomInfo_creationdate_set(long jarg1, MUCRoomInfo jarg1_, String jarg2);
  public final static native String MUCRoomInfo_creationdate_get(long jarg1, MUCRoomInfo jarg1_);
  public final static native void MUCRoomInfo_isPublic_set(long jarg1, MUCRoomInfo jarg1_, boolean jarg2);
  public final static native boolean MUCRoomInfo_isPublic_get(long jarg1, MUCRoomInfo jarg1_);
  public final static native void MUCRoomInfo_isPersistent_set(long jarg1, MUCRoomInfo jarg1_, boolean jarg2);
  public final static native boolean MUCRoomInfo_isPersistent_get(long jarg1, MUCRoomInfo jarg1_);
  public final static native void MUCRoomInfo_isModerated_set(long jarg1, MUCRoomInfo jarg1_, boolean jarg2);
  public final static native boolean MUCRoomInfo_isModerated_get(long jarg1, MUCRoomInfo jarg1_);
  public final static native void MUCRoomInfo_isMembersOnly_set(long jarg1, MUCRoomInfo jarg1_, boolean jarg2);
  public final static native boolean MUCRoomInfo_isMembersOnly_get(long jarg1, MUCRoomInfo jarg1_);
  public final static native void MUCRoomInfo_isPasswordProtected_set(long jarg1, MUCRoomInfo jarg1_, boolean jarg2);
  public final static native boolean MUCRoomInfo_isPasswordProtected_get(long jarg1, MUCRoomInfo jarg1_);
  public final static native void MUCRoomInfo_isNonAnonymous_set(long jarg1, MUCRoomInfo jarg1_, boolean jarg2);
  public final static native boolean MUCRoomInfo_isNonAnonymous_get(long jarg1, MUCRoomInfo jarg1_);
  public final static native void delete_MUCRoomInfo(long jarg1);
  public final static native long new_MUCRoomConfig();
  public final static native void MUCRoomConfig_roomname_set(long jarg1, MUCRoomConfig jarg1_, String jarg2);
  public final static native String MUCRoomConfig_roomname_get(long jarg1, MUCRoomConfig jarg1_);
  public final static native void MUCRoomConfig_roomdesc_set(long jarg1, MUCRoomConfig jarg1_, String jarg2);
  public final static native String MUCRoomConfig_roomdesc_get(long jarg1, MUCRoomConfig jarg1_);
  public final static native void MUCRoomConfig_enableLogging_set(long jarg1, MUCRoomConfig jarg1_, boolean jarg2);
  public final static native boolean MUCRoomConfig_enableLogging_get(long jarg1, MUCRoomConfig jarg1_);
  public final static native void MUCRoomConfig_enableChangeSubject_set(long jarg1, MUCRoomConfig jarg1_, boolean jarg2);
  public final static native boolean MUCRoomConfig_enableChangeSubject_get(long jarg1, MUCRoomConfig jarg1_);
  public final static native void MUCRoomConfig_isPublic_set(long jarg1, MUCRoomConfig jarg1_, boolean jarg2);
  public final static native boolean MUCRoomConfig_isPublic_get(long jarg1, MUCRoomConfig jarg1_);
  public final static native void MUCRoomConfig_isPersistent_set(long jarg1, MUCRoomConfig jarg1_, boolean jarg2);
  public final static native boolean MUCRoomConfig_isPersistent_get(long jarg1, MUCRoomConfig jarg1_);
  public final static native void MUCRoomConfig_isModerated_set(long jarg1, MUCRoomConfig jarg1_, boolean jarg2);
  public final static native boolean MUCRoomConfig_isModerated_get(long jarg1, MUCRoomConfig jarg1_);
  public final static native void MUCRoomConfig_isMembersOnly_set(long jarg1, MUCRoomConfig jarg1_, boolean jarg2);
  public final static native boolean MUCRoomConfig_isMembersOnly_get(long jarg1, MUCRoomConfig jarg1_);
  public final static native void MUCRoomConfig_isPasswordProtected_set(long jarg1, MUCRoomConfig jarg1_, boolean jarg2);
  public final static native boolean MUCRoomConfig_isPasswordProtected_get(long jarg1, MUCRoomConfig jarg1_);
  public final static native void MUCRoomConfig_roompassword_set(long jarg1, MUCRoomConfig jarg1_, String jarg2);
  public final static native String MUCRoomConfig_roompassword_get(long jarg1, MUCRoomConfig jarg1_);
  public final static native void delete_MUCRoomConfig(long jarg1);
  public final static native void FileMetadata_name_set(long jarg1, FileMetadata jarg1_, String jarg2);
  public final static native String FileMetadata_name_get(long jarg1, FileMetadata jarg1_);
  public final static native void FileMetadata_size_set(long jarg1, FileMetadata jarg1_, int jarg2);
  public final static native int FileMetadata_size_get(long jarg1, FileMetadata jarg1_);
  public final static native void FileMetadata_hash_set(long jarg1, FileMetadata jarg1_, String jarg2);
  public final static native String FileMetadata_hash_get(long jarg1, FileMetadata jarg1_);
  public final static native void FileMetadata_date_set(long jarg1, FileMetadata jarg1_, String jarg2);
  public final static native String FileMetadata_date_get(long jarg1, FileMetadata jarg1_);
  public final static native void FileMetadata_mimetype_set(long jarg1, FileMetadata jarg1_, String jarg2);
  public final static native String FileMetadata_mimetype_get(long jarg1, FileMetadata jarg1_);
  public final static native void FileMetadata_desc_set(long jarg1, FileMetadata jarg1_, String jarg2);
  public final static native String FileMetadata_desc_get(long jarg1, FileMetadata jarg1_);
  public final static native long new_FileMetadata();
  public final static native void delete_FileMetadata(long jarg1);
  public final static native long new_BytestreamData(String jarg1);
  public final static native void delete_BytestreamData(long jarg1);
  public final static native long BytestreamData_copy(long jarg1, BytestreamData jarg1_, byte[] jarg2, long jarg3);
  public final static native long BytestreamData_length(long jarg1, BytestreamData jarg1_);
  public final static native long new_Microblog(String jarg1);
  public final static native void delete_Microblog(long jarg1);
  public final static native String Microblog_id(long jarg1, Microblog jarg1_);
  public final static native String Microblog_author(long jarg1, Microblog jarg1_);
  public final static native int Microblog_type(long jarg1, Microblog jarg1_);
  public final static native String Microblog_content(long jarg1, Microblog jarg1_);
  public final static native String Microblog_published(long jarg1, Microblog jarg1_);
  public final static native String Microblog_geoloc(long jarg1, Microblog jarg1_);
  public final static native String Microblog_device(long jarg1, Microblog jarg1_);
  public final static native String Microblog_commentLink(long jarg1, Microblog jarg1_);
  public final static native void Microblog_setAuthor(long jarg1, Microblog jarg1_, String jarg2);
  public final static native void Microblog_setType(long jarg1, Microblog jarg1_, int jarg2);
  public final static native void Microblog_setContent(long jarg1, Microblog jarg1_, String jarg2);
  public final static native void Microblog_setPublished(long jarg1, Microblog jarg1_, String jarg2);
  public final static native void Microblog_setGeoloc(long jarg1, Microblog jarg1_, String jarg2);
  public final static native void Microblog_setDevice(long jarg1, Microblog jarg1_, String jarg2);
  public final static native void Microblog_setCommentLink(long jarg1, Microblog jarg1_, String jarg2);
  public final static native long new_VCard__SWIG_0();
  public final static native long new_VCard__SWIG_1(String jarg1);
  public final static native void delete_VCard(long jarg1);
  public final static native boolean VCard_isValid(long jarg1, VCard jarg1_);
  public final static native String VCard_xml(long jarg1, VCard jarg1_);
  public final static native void VCard_setFormattedname(long jarg1, VCard jarg1_, String jarg2);
  public final static native String VCard_formattedname(long jarg1, VCard jarg1_);
  public final static native void VCard_setName(long jarg1, VCard jarg1_, String jarg2, String jarg3);
  public final static native long VCard_name(long jarg1, VCard jarg1_);
  public final static native void VCard_setNickname(long jarg1, VCard jarg1_, String jarg2);
  public final static native String VCard_nickname(long jarg1, VCard jarg1_);
  public final static native void VCard_setUrl(long jarg1, VCard jarg1_, String jarg2);
  public final static native String VCard_url(long jarg1, VCard jarg1_);
  public final static native void VCard_setBday(long jarg1, VCard jarg1_, String jarg2);
  public final static native String VCard_bday(long jarg1, VCard jarg1_);
  public final static native void VCard_setJabberid(long jarg1, VCard jarg1_, String jarg2);
  public final static native String VCard_jabberid(long jarg1, VCard jarg1_);
  public final static native void VCard_setTitle(long jarg1, VCard jarg1_, String jarg2);
  public final static native String VCard_title(long jarg1, VCard jarg1_);
  public final static native void VCard_setRole(long jarg1, VCard jarg1_, String jarg2);
  public final static native String VCard_role(long jarg1, VCard jarg1_);
  public final static native void VCard_setNote(long jarg1, VCard jarg1_, String jarg2);
  public final static native String VCard_note(long jarg1, VCard jarg1_);
  public final static native void VCard_setDesc(long jarg1, VCard jarg1_, String jarg2);
  public final static native String VCard_desc(long jarg1, VCard jarg1_);
  public final static native void VCard_setMailer(long jarg1, VCard jarg1_, String jarg2);
  public final static native String VCard_mailer(long jarg1, VCard jarg1_);
  public final static native void VCard_setRev(long jarg1, VCard jarg1_, String jarg2);
  public final static native String VCard_rev(long jarg1, VCard jarg1_);
  public final static native void VCard_setUid(long jarg1, VCard jarg1_, String jarg2);
  public final static native String VCard_uid(long jarg1, VCard jarg1_);
  public final static native void VCard_setTz(long jarg1, VCard jarg1_, String jarg2);
  public final static native String VCard_tz(long jarg1, VCard jarg1_);
  public final static native void VCard_setProdid(long jarg1, VCard jarg1_, String jarg2);
  public final static native String VCard_prodid(long jarg1, VCard jarg1_);
  public final static native void VCard_setSortstring(long jarg1, VCard jarg1_, String jarg2);
  public final static native String VCard_sortstring(long jarg1, VCard jarg1_);
  public final static native void VCard_setPhoto(long jarg1, VCard jarg1_, String jarg2, String jarg3);
  public final static native long VCard_photo(long jarg1, VCard jarg1_);
  public final static native void VCard_setLogo(long jarg1, VCard jarg1_, String jarg2, String jarg3);
  public final static native long VCard_logo(long jarg1, VCard jarg1_);
  public final static native void VCard_addEmail(long jarg1, VCard jarg1_, String jarg2, int jarg3);
  public final static native long VCard_emailList(long jarg1, VCard jarg1_);
  public final static native void VCard_addAddress(long jarg1, VCard jarg1_, String jarg2, String jarg3, String jarg4, String jarg5, String jarg6, String jarg7, String jarg8, int jarg9);
  public final static native long VCard_addressList(long jarg1, VCard jarg1_);
  public final static native void VCard_addLabel(long jarg1, VCard jarg1_, long jarg2, StringList jarg2_, int jarg3);
  public final static native long VCard_labelList(long jarg1, VCard jarg1_);
  public final static native void VCard_addTelephone(long jarg1, VCard jarg1_, String jarg2, int jarg3);
  public final static native long VCard_telephoneList(long jarg1, VCard jarg1_);
  public final static native void VCard_setGeo(long jarg1, VCard jarg1_, String jarg2, String jarg3);
  public final static native long VCard_geo(long jarg1, VCard jarg1_);
  public final static native void VCard_setOrg(long jarg1, VCard jarg1_, String jarg2, long jarg3, StringList jarg3_);
  public final static native long VCard_org(long jarg1, VCard jarg1_);
  public final static native long new_VCardName();
  public final static native void delete_VCardName(long jarg1);
  public final static native String VCardName_family(long jarg1, VCardName jarg1_);
  public final static native String VCardName_given(long jarg1, VCardName jarg1_);
  public final static native String VCardName_middle(long jarg1, VCardName jarg1_);
  public final static native String VCardName_prefix(long jarg1, VCardName jarg1_);
  public final static native String VCardName_suffix(long jarg1, VCardName jarg1_);
  public final static native void VCardName_setFamily(long jarg1, VCardName jarg1_, String jarg2);
  public final static native void VCardName_setGiven(long jarg1, VCardName jarg1_, String jarg2);
  public final static native void VCardName_setMiddle(long jarg1, VCardName jarg1_, String jarg2);
  public final static native void VCardName_setPrefix(long jarg1, VCardName jarg1_, String jarg2);
  public final static native void VCardName_setSuffix(long jarg1, VCardName jarg1_, String jarg2);
  public final static native long new_VCardPhoto();
  public final static native void delete_VCardPhoto(long jarg1);
  public final static native void VCardPhoto_setExtval(long jarg1, VCardPhoto jarg1_, String jarg2);
  public final static native String VCardPhoto_extval(long jarg1, VCardPhoto jarg1_);
  public final static native void VCardPhoto_setBinval(long jarg1, VCardPhoto jarg1_, String jarg2);
  public final static native String VCardPhoto_binval(long jarg1, VCardPhoto jarg1_);
  public final static native void VCardPhoto_setType(long jarg1, VCardPhoto jarg1_, String jarg2);
  public final static native String VCardPhoto_type(long jarg1, VCardPhoto jarg1_);
  public final static native long new_VCardEmail();
  public final static native void delete_VCardEmail(long jarg1);
  public final static native void VCardEmail_setUserid(long jarg1, VCardEmail jarg1_, String jarg2);
  public final static native String VCardEmail_userid(long jarg1, VCardEmail jarg1_);
  public final static native boolean VCardEmail_isHome(long jarg1, VCardEmail jarg1_);
  public final static native boolean VCardEmail_isWork(long jarg1, VCardEmail jarg1_);
  public final static native boolean VCardEmail_isInternet(long jarg1, VCardEmail jarg1_);
  public final static native boolean VCardEmail_isPref(long jarg1, VCardEmail jarg1_);
  public final static native boolean VCardEmail_isX400(long jarg1, VCardEmail jarg1_);
  public final static native void VCardEmail_setType(long jarg1, VCardEmail jarg1_, int jarg2);
  public final static native long new_VCardAddress();
  public final static native void delete_VCardAddress(long jarg1);
  public final static native void VCardAddress_setPobox(long jarg1, VCardAddress jarg1_, String jarg2);
  public final static native String VCardAddress_pobox(long jarg1, VCardAddress jarg1_);
  public final static native void VCardAddress_setExtadd(long jarg1, VCardAddress jarg1_, String jarg2);
  public final static native String VCardAddress_extadd(long jarg1, VCardAddress jarg1_);
  public final static native void VCardAddress_setStreet(long jarg1, VCardAddress jarg1_, String jarg2);
  public final static native String VCardAddress_street(long jarg1, VCardAddress jarg1_);
  public final static native void VCardAddress_setLocality(long jarg1, VCardAddress jarg1_, String jarg2);
  public final static native String VCardAddress_locality(long jarg1, VCardAddress jarg1_);
  public final static native void VCardAddress_setRegion(long jarg1, VCardAddress jarg1_, String jarg2);
  public final static native String VCardAddress_region(long jarg1, VCardAddress jarg1_);
  public final static native void VCardAddress_setPcode(long jarg1, VCardAddress jarg1_, String jarg2);
  public final static native String VCardAddress_pcode(long jarg1, VCardAddress jarg1_);
  public final static native void VCardAddress_setCtry(long jarg1, VCardAddress jarg1_, String jarg2);
  public final static native String VCardAddress_ctry(long jarg1, VCardAddress jarg1_);
  public final static native boolean VCardAddress_isHome(long jarg1, VCardAddress jarg1_);
  public final static native boolean VCardAddress_isWork(long jarg1, VCardAddress jarg1_);
  public final static native boolean VCardAddress_isPostal(long jarg1, VCardAddress jarg1_);
  public final static native boolean VCardAddress_isParcel(long jarg1, VCardAddress jarg1_);
  public final static native boolean VCardAddress_isPref(long jarg1, VCardAddress jarg1_);
  public final static native boolean VCardAddress_isDom(long jarg1, VCardAddress jarg1_);
  public final static native boolean VCardAddress_isIntl(long jarg1, VCardAddress jarg1_);
  public final static native void VCardAddress_setType(long jarg1, VCardAddress jarg1_, int jarg2);
  public final static native long new_VCardLabel();
  public final static native void delete_VCardLabel(long jarg1);
  public final static native void VCardLabel_setLines(long jarg1, VCardLabel jarg1_, long jarg2, StringList jarg2_);
  public final static native long VCardLabel_lines(long jarg1, VCardLabel jarg1_);
  public final static native boolean VCardLabel_isHome(long jarg1, VCardLabel jarg1_);
  public final static native boolean VCardLabel_isWork(long jarg1, VCardLabel jarg1_);
  public final static native boolean VCardLabel_isPostal(long jarg1, VCardLabel jarg1_);
  public final static native boolean VCardLabel_isParcel(long jarg1, VCardLabel jarg1_);
  public final static native boolean VCardLabel_isPref(long jarg1, VCardLabel jarg1_);
  public final static native boolean VCardLabel_isDom(long jarg1, VCardLabel jarg1_);
  public final static native boolean VCardLabel_isIntl(long jarg1, VCardLabel jarg1_);
  public final static native void VCardLabel_setType(long jarg1, VCardLabel jarg1_, int jarg2);
  public final static native long new_VCardTelephone();
  public final static native void delete_VCardTelephone(long jarg1);
  public final static native void VCardTelephone_setNumber(long jarg1, VCardTelephone jarg1_, String jarg2);
  public final static native String VCardTelephone_number(long jarg1, VCardTelephone jarg1_);
  public final static native boolean VCardTelephone_isHome(long jarg1, VCardTelephone jarg1_);
  public final static native boolean VCardTelephone_isWork(long jarg1, VCardTelephone jarg1_);
  public final static native boolean VCardTelephone_isVoice(long jarg1, VCardTelephone jarg1_);
  public final static native boolean VCardTelephone_isFax(long jarg1, VCardTelephone jarg1_);
  public final static native boolean VCardTelephone_isPager(long jarg1, VCardTelephone jarg1_);
  public final static native boolean VCardTelephone_isMsg(long jarg1, VCardTelephone jarg1_);
  public final static native boolean VCardTelephone_isCell(long jarg1, VCardTelephone jarg1_);
  public final static native boolean VCardTelephone_isVideo(long jarg1, VCardTelephone jarg1_);
  public final static native boolean VCardTelephone_isBBS(long jarg1, VCardTelephone jarg1_);
  public final static native boolean VCardTelephone_isModem(long jarg1, VCardTelephone jarg1_);
  public final static native boolean VCardTelephone_isISDN(long jarg1, VCardTelephone jarg1_);
  public final static native boolean VCardTelephone_isPCS(long jarg1, VCardTelephone jarg1_);
  public final static native boolean VCardTelephone_isPref(long jarg1, VCardTelephone jarg1_);
  public final static native void VCardTelephone_setType(long jarg1, VCardTelephone jarg1_, int jarg2);
  public final static native long new_VCardGeo();
  public final static native void delete_VCardGeo(long jarg1);
  public final static native void VCardGeo_setLatitude(long jarg1, VCardGeo jarg1_, String jarg2);
  public final static native String VCardGeo_latitude(long jarg1, VCardGeo jarg1_);
  public final static native void VCardGeo_setLongitude(long jarg1, VCardGeo jarg1_, String jarg2);
  public final static native String VCardGeo_longitude(long jarg1, VCardGeo jarg1_);
  public final static native long new_VCardOrg();
  public final static native void delete_VCardOrg(long jarg1);
  public final static native void VCardOrg_setName(long jarg1, VCardOrg jarg1_, String jarg2);
  public final static native String VCardOrg_name(long jarg1, VCardOrg jarg1_);
  public final static native void VCardOrg_setUnits(long jarg1, VCardOrg jarg1_, long jarg2, StringList jarg2_);
  public final static native long VCardOrg_units(long jarg1, VCardOrg jarg1_);
  public final static native long new_AddressBookInfo();
  public final static native void delete_AddressBookInfo(long jarg1);
  public final static native void AddressBookInfo_setId(long jarg1, AddressBookInfo jarg1_, String jarg2);
  public final static native String AddressBookInfo_id(long jarg1, AddressBookInfo jarg1_);
  public final static native void AddressBookInfo_setName(long jarg1, AddressBookInfo jarg1_, String jarg2);
  public final static native String AddressBookInfo_name(long jarg1, AddressBookInfo jarg1_);
  public final static native void AddressBookInfo_setAvailable(long jarg1, AddressBookInfo jarg1_, boolean jarg2);
  public final static native boolean AddressBookInfo_isAvailable(long jarg1, AddressBookInfo jarg1_);
  public final static native long new_IMailSMTPInfo();
  public final static native void delete_IMailSMTPInfo(long jarg1);
  public final static native void IMailSMTPInfo_setMessageID(long jarg1, IMailSMTPInfo jarg1_, String jarg2);
  public final static native String IMailSMTPInfo_messageID(long jarg1, IMailSMTPInfo jarg1_);
  public final static native void IMailSMTPInfo_setTitle(long jarg1, IMailSMTPInfo jarg1_, String jarg2);
  public final static native String IMailSMTPInfo_title(long jarg1, IMailSMTPInfo jarg1_);
  public final static native void IMailSMTPInfo_setAttachmentNum(long jarg1, IMailSMTPInfo jarg1_, int jarg2);
  public final static native int IMailSMTPInfo_attachmentNum(long jarg1, IMailSMTPInfo jarg1_);
  public final static native long new_Geoloc();
  public final static native void delete_Geoloc(long jarg1);
  public final static native void Geoloc_setAccuracy(long jarg1, Geoloc jarg1_, double jarg2);
  public final static native double Geoloc_accuracy(long jarg1, Geoloc jarg1_);
  public final static native void Geoloc_setAlt(long jarg1, Geoloc jarg1_, double jarg2);
  public final static native double Geoloc_alt(long jarg1, Geoloc jarg1_);
  public final static native void Geoloc_setArea(long jarg1, Geoloc jarg1_, String jarg2);
  public final static native String Geoloc_area(long jarg1, Geoloc jarg1_);
  public final static native void Geoloc_setBearing(long jarg1, Geoloc jarg1_, double jarg2);
  public final static native double Geoloc_bearing(long jarg1, Geoloc jarg1_);
  public final static native void Geoloc_setBuilding(long jarg1, Geoloc jarg1_, String jarg2);
  public final static native String Geoloc_building(long jarg1, Geoloc jarg1_);
  public final static native void Geoloc_setCountry(long jarg1, Geoloc jarg1_, String jarg2);
  public final static native String Geoloc_country(long jarg1, Geoloc jarg1_);
  public final static native void Geoloc_setCountrycode(long jarg1, Geoloc jarg1_, String jarg2);
  public final static native String Geoloc_countrycode(long jarg1, Geoloc jarg1_);
  public final static native void Geoloc_setDatum(long jarg1, Geoloc jarg1_, String jarg2);
  public final static native String Geoloc_datum(long jarg1, Geoloc jarg1_);
  public final static native void Geoloc_setDescription(long jarg1, Geoloc jarg1_, String jarg2);
  public final static native String Geoloc_description(long jarg1, Geoloc jarg1_);
  public final static native void Geoloc_setError(long jarg1, Geoloc jarg1_, double jarg2);
  public final static native double Geoloc_error(long jarg1, Geoloc jarg1_);
  public final static native void Geoloc_setFloor(long jarg1, Geoloc jarg1_, String jarg2);
  public final static native String Geoloc_floor(long jarg1, Geoloc jarg1_);
  public final static native void Geoloc_setLat(long jarg1, Geoloc jarg1_, double jarg2);
  public final static native double Geoloc_lat(long jarg1, Geoloc jarg1_);
  public final static native void Geoloc_setLocality(long jarg1, Geoloc jarg1_, String jarg2);
  public final static native String Geoloc_locality(long jarg1, Geoloc jarg1_);
  public final static native void Geoloc_setLon(long jarg1, Geoloc jarg1_, double jarg2);
  public final static native double Geoloc_lon(long jarg1, Geoloc jarg1_);
  public final static native void Geoloc_setPostalcode(long jarg1, Geoloc jarg1_, String jarg2);
  public final static native String Geoloc_postalcode(long jarg1, Geoloc jarg1_);
  public final static native void Geoloc_setRegion(long jarg1, Geoloc jarg1_, String jarg2);
  public final static native String Geoloc_region(long jarg1, Geoloc jarg1_);
  public final static native void Geoloc_setRoom(long jarg1, Geoloc jarg1_, String jarg2);
  public final static native String Geoloc_room(long jarg1, Geoloc jarg1_);
  public final static native void Geoloc_setSpeed(long jarg1, Geoloc jarg1_, double jarg2);
  public final static native double Geoloc_speed(long jarg1, Geoloc jarg1_);
  public final static native void Geoloc_setStreet(long jarg1, Geoloc jarg1_, String jarg2);
  public final static native String Geoloc_street(long jarg1, Geoloc jarg1_);
  public final static native void Geoloc_setText(long jarg1, Geoloc jarg1_, String jarg2);
  public final static native String Geoloc_text(long jarg1, Geoloc jarg1_);
  public final static native void Geoloc_setTimestamp(long jarg1, Geoloc jarg1_, String jarg2);
  public final static native String Geoloc_timestamp(long jarg1, Geoloc jarg1_);
  public final static native void Geoloc_setTzo(long jarg1, Geoloc jarg1_, String jarg2);
  public final static native String Geoloc_tzo(long jarg1, Geoloc jarg1_);
  public final static native void Geoloc_setUri(long jarg1, Geoloc jarg1_, String jarg2);
  public final static native String Geoloc_uri(long jarg1, Geoloc jarg1_);
  public final static native long new_BackgroundInfo();
  public final static native void delete_BackgroundInfo(long jarg1);
  public final static native void BackgroundInfo_setId(long jarg1, BackgroundInfo jarg1_, String jarg2);
  public final static native String BackgroundInfo_id(long jarg1, BackgroundInfo jarg1_);
  public final static native void BackgroundInfo_setType(long jarg1, BackgroundInfo jarg1_, String jarg2);
  public final static native String BackgroundInfo_type(long jarg1, BackgroundInfo jarg1_);
  public final static native void BackgroundInfo_setUrl(long jarg1, BackgroundInfo jarg1_, String jarg2);
  public final static native String BackgroundInfo_url(long jarg1, BackgroundInfo jarg1_);
  public final static native void BackgroundInfo_setBytes(long jarg1, BackgroundInfo jarg1_, int jarg2);
  public final static native int BackgroundInfo_bytes(long jarg1, BackgroundInfo jarg1_);
  public final static native void BackgroundInfo_setHeight(long jarg1, BackgroundInfo jarg1_, int jarg2);
  public final static native int BackgroundInfo_height(long jarg1, BackgroundInfo jarg1_);
  public final static native void BackgroundInfo_setWidth(long jarg1, BackgroundInfo jarg1_, int jarg2);
  public final static native int BackgroundInfo_width(long jarg1, BackgroundInfo jarg1_);
  public final static native void SID_sid_set(long jarg1, SID jarg1_, String jarg2);
  public final static native String SID_sid_get(long jarg1, SID jarg1_);
  public final static native long new_SID();
  public final static native void delete_SID(long jarg1);
  public final static native long new_EntityInfo();
  public final static native void delete_EntityInfo(long jarg1);
  public final static native void EntityInfo_setIdentities(long jarg1, EntityInfo jarg1_, long jarg2, DiscoIdentityList jarg2_);
  public final static native long EntityInfo_identities(long jarg1, EntityInfo jarg1_);
  public final static native void EntityInfo_setFeatures(long jarg1, EntityInfo jarg1_, long jarg2, StringList jarg2_);
  public final static native long EntityInfo_features(long jarg1, EntityInfo jarg1_);
  public final static native long new_StringList();
  public final static native long StringList_size(long jarg1, StringList jarg1_);
  public final static native boolean StringList_isEmpty(long jarg1, StringList jarg1_);
  public final static native void StringList_clear(long jarg1, StringList jarg1_);
  public final static native void StringList_add(long jarg1, StringList jarg1_, String jarg2);
  public final static native String StringList_get(long jarg1, StringList jarg1_, int jarg2);
  public final static native void delete_StringList(long jarg1);
  public final static native long new_IntList();
  public final static native long IntList_size(long jarg1, IntList jarg1_);
  public final static native boolean IntList_isEmpty(long jarg1, IntList jarg1_);
  public final static native void IntList_clear(long jarg1, IntList jarg1_);
  public final static native void IntList_add(long jarg1, IntList jarg1_, int jarg2);
  public final static native int IntList_get(long jarg1, IntList jarg1_, int jarg2);
  public final static native void delete_IntList(long jarg1);
  public final static native long new_StringMap__SWIG_0();
  public final static native long new_StringMap__SWIG_1(long jarg1, StringMap jarg1_);
  public final static native long StringMap_size(long jarg1, StringMap jarg1_);
  public final static native boolean StringMap_empty(long jarg1, StringMap jarg1_);
  public final static native void StringMap_clear(long jarg1, StringMap jarg1_);
  public final static native long StringMap_keys(long jarg1, StringMap jarg1_);
  public final static native String StringMap_get(long jarg1, StringMap jarg1_, String jarg2);
  public final static native void StringMap_set(long jarg1, StringMap jarg1_, String jarg2, String jarg3);
  public final static native void StringMap_del(long jarg1, StringMap jarg1_, String jarg2);
  public final static native boolean StringMap_has_key(long jarg1, StringMap jarg1_, String jarg2);
  public final static native void delete_StringMap(long jarg1);
  public final static native long new_Roster__SWIG_0();
  public final static native long new_Roster__SWIG_1(long jarg1, Roster jarg1_);
  public final static native long Roster_size(long jarg1, Roster jarg1_);
  public final static native boolean Roster_empty(long jarg1, Roster jarg1_);
  public final static native void Roster_clear(long jarg1, Roster jarg1_);
  public final static native long Roster_keys(long jarg1, Roster jarg1_);
  public final static native long Roster_get(long jarg1, Roster jarg1_, String jarg2);
  public final static native void Roster_set(long jarg1, Roster jarg1_, String jarg2, long jarg3, RosterItem jarg3_);
  public final static native void Roster_del(long jarg1, Roster jarg1_, String jarg2);
  public final static native boolean Roster_has_key(long jarg1, Roster jarg1_, String jarg2);
  public final static native void delete_Roster(long jarg1);
  public final static native long new_VCardEmailList();
  public final static native long VCardEmailList_size(long jarg1, VCardEmailList jarg1_);
  public final static native boolean VCardEmailList_isEmpty(long jarg1, VCardEmailList jarg1_);
  public final static native void VCardEmailList_clear(long jarg1, VCardEmailList jarg1_);
  public final static native void VCardEmailList_add(long jarg1, VCardEmailList jarg1_, long jarg2, VCardEmail jarg2_);
  public final static native long VCardEmailList_get(long jarg1, VCardEmailList jarg1_, int jarg2);
  public final static native void delete_VCardEmailList(long jarg1);
  public final static native long new_VCardAddressList();
  public final static native long VCardAddressList_size(long jarg1, VCardAddressList jarg1_);
  public final static native boolean VCardAddressList_isEmpty(long jarg1, VCardAddressList jarg1_);
  public final static native void VCardAddressList_clear(long jarg1, VCardAddressList jarg1_);
  public final static native void VCardAddressList_add(long jarg1, VCardAddressList jarg1_, long jarg2, VCardAddress jarg2_);
  public final static native long VCardAddressList_get(long jarg1, VCardAddressList jarg1_, int jarg2);
  public final static native void delete_VCardAddressList(long jarg1);
  public final static native long new_VCardLabelList();
  public final static native long VCardLabelList_size(long jarg1, VCardLabelList jarg1_);
  public final static native boolean VCardLabelList_isEmpty(long jarg1, VCardLabelList jarg1_);
  public final static native void VCardLabelList_clear(long jarg1, VCardLabelList jarg1_);
  public final static native void VCardLabelList_add(long jarg1, VCardLabelList jarg1_, long jarg2, VCardLabel jarg2_);
  public final static native long VCardLabelList_get(long jarg1, VCardLabelList jarg1_, int jarg2);
  public final static native void delete_VCardLabelList(long jarg1);
  public final static native long new_VCardTelephponeList();
  public final static native long VCardTelephponeList_size(long jarg1, VCardTelephponeList jarg1_);
  public final static native boolean VCardTelephponeList_isEmpty(long jarg1, VCardTelephponeList jarg1_);
  public final static native void VCardTelephponeList_clear(long jarg1, VCardTelephponeList jarg1_);
  public final static native void VCardTelephponeList_add(long jarg1, VCardTelephponeList jarg1_, long jarg2, VCardTelephone jarg2_);
  public final static native long VCardTelephponeList_get(long jarg1, VCardTelephponeList jarg1_, int jarg2);
  public final static native void delete_VCardTelephponeList(long jarg1);
  public final static native long new_DiscoIdentityList();
  public final static native long DiscoIdentityList_size(long jarg1, DiscoIdentityList jarg1_);
  public final static native boolean DiscoIdentityList_isEmpty(long jarg1, DiscoIdentityList jarg1_);
  public final static native void DiscoIdentityList_clear(long jarg1, DiscoIdentityList jarg1_);
  public final static native void DiscoIdentityList_add(long jarg1, DiscoIdentityList jarg1_, long jarg2);
  public final static native long DiscoIdentityList_get(long jarg1, DiscoIdentityList jarg1_, int jarg2);
  public final static native void delete_DiscoIdentityList(long jarg1);
  public final static native long Message_SWIGUpcast(long jarg1);
  public final static native long Presence_SWIGUpcast(long jarg1);

  public static void SwigDirector_XmppCallback_onLog(XmppCallback self, int level_, int area_, String log_) {
    self.onLog(LogLevel.swigToEnum(level_), LogArea.swigToEnum(area_), log_);
  }
  public static void SwigDirector_XmppCallback_onInvaildJID(XmppCallback self) {
    self.onInvaildJID();
  }
  public static void SwigDirector_XmppCallback_onInvaildPassword(XmppCallback self) {
    self.onInvaildPassword();
  }
  public static void SwigDirector_XmppCallback_onTcpConnSuccess(XmppCallback self) {
    self.onTcpConnSuccess();
  }
  public static void SwigDirector_XmppCallback_onTcpConnFailed(XmppCallback self, int error_) {
    self.onTcpConnFailed(ConnectionError.swigToEnum(error_));
  }
  public static void SwigDirector_XmppCallback_onNegotiatingEncryption(XmppCallback self) {
    self.onNegotiatingEncryption();
  }
  public static void SwigDirector_XmppCallback_onNegotiatingCompression(XmppCallback self) {
    self.onNegotiatingCompression();
  }
  public static void SwigDirector_XmppCallback_onAuthenticating(XmppCallback self) {
    self.onAuthenticating();
  }
  public static void SwigDirector_XmppCallback_onAuthFailed(XmppCallback self) {
    self.onAuthFailed();
  }
  public static void SwigDirector_XmppCallback_onBindingResource(XmppCallback self) {
    self.onBindingResource();
  }
  public static void SwigDirector_XmppCallback_onCreatingSession(XmppCallback self) {
    self.onCreatingSession();
  }
  public static void SwigDirector_XmppCallback_onLoadingRoster(XmppCallback self) {
    self.onLoadingRoster();
  }
  public static void SwigDirector_XmppCallback_onLoginSuccess(XmppCallback self) {
    self.onLoginSuccess();
  }
  public static void SwigDirector_XmppCallback_onDiscoMucService(XmppCallback self, long mucService_) {
    self.onDiscoMucService(new JID(mucService_, false));
  }
  public static void SwigDirector_XmppCallback_onDiscoS5BService(XmppCallback self, long s5BService_) {
    self.onDiscoS5BService(new JID(s5BService_, false));
  }
  public static void SwigDirector_XmppCallback_onRetrieveEntityInfo(XmppCallback self, long jid_, long info_) {
    self.onRetrieveEntityInfo(new JID(jid_, false), (info_ == 0) ? null : new EntityInfo(info_, false));
  }
  public static void SwigDirector_XmppCallback_onLogoutSuccess(XmppCallback self) {
    self.onLogoutSuccess();
  }
  public static void SwigDirector_XmppCallback_onRecvSelfPresence(XmppCallback self, long item_, String resource_, int type_, String msg_) {
    self.onRecvSelfPresence(new RosterItem(item_, false), resource_, Presence.PresenceType.swigToEnum(type_), msg_);
  }
  public static void SwigDirector_XmppCallback_onRecvRosterPresence(XmppCallback self, long self_, String resource_, int type_, String msg_) {
    self.onRecvRosterPresence(new RosterItem(self_, false), resource_, Presence.PresenceType.swigToEnum(type_), msg_);
  }
  public static void SwigDirector_XmppCallback_onRecvChatMessage(XmppCallback self, long msg_, String xhtml_, boolean receipts_) {
    self.onRecvChatMessage(new Message(msg_, false), xhtml_, receipts_);
  }
  public static void SwigDirector_XmppCallback_onRecvAttentionMessage(XmppCallback self, String id_, long from_) {
    self.onRecvAttentionMessage(id_, new JID(from_, false));
  }
  public static void SwigDirector_XmppCallback_onRecvIMailMessage(XmppCallback self, String id_, long from_, long iMailSMTPInfo_, boolean receipts_) {
    self.onRecvIMailMessage(id_, new JID(from_, false), new IMailSMTPInfo(iMailSMTPInfo_, false), receipts_);
  }
  public static void SwigDirector_XmppCallback_onRecvLocationMessage(XmppCallback self, String id_, long from_, long geoloc_) {
    self.onRecvLocationMessage(id_, new JID(from_, false), new Geoloc(geoloc_, false));
  }
  public static void SwigDirector_XmppCallback_onRecvReceiptMessage(XmppCallback self, String id_, long from_, String receiptId_) {
    self.onRecvReceiptMessage(id_, new JID(from_, false), receiptId_);
  }
  public static void SwigDirector_XmppCallback_onRecvRoster(XmppCallback self, long roster_) {
    self.onRecvRoster(new Roster(roster_, false));
  }
  public static void SwigDirector_XmppCallback_onRosterItemAdded(XmppCallback self, long item_) {
    self.onRosterItemAdded((item_ == 0) ? null : new RosterItem(item_, false));
  }
  public static void SwigDirector_XmppCallback_onRosterItemUpdated(XmppCallback self, long item_) {
    self.onRosterItemUpdated((item_ == 0) ? null : new RosterItem(item_, false));
  }
  public static void SwigDirector_XmppCallback_onRosterItemRemoved(XmppCallback self, long item_) {
    self.onRosterItemRemoved((item_ == 0) ? null : new RosterItem(item_, false));
  }
  public static void SwigDirector_XmppCallback_onRosterItemSubscribed(XmppCallback self, long item_) {
    self.onRosterItemSubscribed((item_ == 0) ? null : new RosterItem(item_, false));
  }
  public static void SwigDirector_XmppCallback_onRosterItemUnsubscribed(XmppCallback self, long item_) {
    self.onRosterItemUnsubscribed((item_ == 0) ? null : new RosterItem(item_, false));
  }
  public static void SwigDirector_XmppCallback_onRecvSubscriptionRequest(XmppCallback self, long jid_, String msg_) {
    self.onRecvSubscriptionRequest(new JID(jid_, false), msg_);
  }
  public static void SwigDirector_XmppCallback_onRetrieveRegistrationInfo(XmppCallback self, String username_, String name_, String email_) {
    self.onRetrieveRegistrationInfo(username_, name_, email_);
  }
  public static void SwigDirector_XmppCallback_onPublishNicknameSuccess(XmppCallback self, String nickname_) {
    self.onPublishNicknameSuccess(nickname_);
  }
  public static void SwigDirector_XmppCallback_onPublishNicknameFailed(XmppCallback self, String nickname_) {
    self.onPublishNicknameFailed(nickname_);
  }
  public static void SwigDirector_XmppCallback_onRecvNickname(XmppCallback self, long from_, String nickname_) {
    self.onRecvNickname(new JID(from_, false), nickname_);
  }
  public static void SwigDirector_XmppCallback_onPublishAvatarSuccess(XmppCallback self, String id_) {
    self.onPublishAvatarSuccess(id_);
  }
  public static void SwigDirector_XmppCallback_onPublishAvatarFailed(XmppCallback self, String id_) {
    self.onPublishAvatarFailed(id_);
  }
  public static void SwigDirector_XmppCallback_onRecvAvatarMetadata(XmppCallback self, long from_, long metadata_) {
    self.onRecvAvatarMetadata(new JID(from_, false), new AvatarMetadata(metadata_, false));
  }
  public static void SwigDirector_XmppCallback_onRecvAvatarData(XmppCallback self, long from_, String id_, String base64_) {
    self.onRecvAvatarData(new JID(from_, false), id_, base64_);
  }
  public static void SwigDirector_XmppCallback_onLoadAvatarSuccess(XmppCallback self, long from_, String id_, String base64_) {
    self.onLoadAvatarSuccess(new JID(from_, false), id_, base64_);
  }
  public static void SwigDirector_XmppCallback_onLoadAvatarFailed(XmppCallback self, long from_, String id_) {
    self.onLoadAvatarFailed(new JID(from_, false), id_);
  }
  public static void SwigDirector_XmppCallback_onNotifyPersonalInfoChangedSuccess(XmppCallback self, String uid_) {
    self.onNotifyPersonalInfoChangedSuccess(uid_);
  }
  public static void SwigDirector_XmppCallback_onNotifyPersonalInfoChangedFailed(XmppCallback self, String uid_) {
    self.onNotifyPersonalInfoChangedFailed(uid_);
  }
  public static void SwigDirector_XmppCallback_onRecvPersonalInfoChangedNotification(XmppCallback self, long from_) {
    self.onRecvPersonalInfoChangedNotification(new JID(from_, false));
  }
  public static void SwigDirector_XmppCallback_onNotifyAddressBookChangedSuccess(XmppCallback self, String uid_) {
    self.onNotifyAddressBookChangedSuccess(uid_);
  }
  public static void SwigDirector_XmppCallback_onNotifyAddressBookChangedFailed(XmppCallback self, String uid_) {
    self.onNotifyAddressBookChangedFailed(uid_);
  }
  public static void SwigDirector_XmppCallback_onRecvAddressBookChangedNotification(XmppCallback self, long from_, long addressBookInfo_) {
    self.onRecvAddressBookChangedNotification(new JID(from_, false), new AddressBookInfo(addressBookInfo_, false));
  }
  public static void SwigDirector_XmppCallback_onRecvBackgroundChangedNotification(XmppCallback self, long from_, long backgroundInfo_) {
    self.onRecvBackgroundChangedNotification(new JID(from_, false), new BackgroundInfo(backgroundInfo_, false));
  }
  public static void SwigDirector_XmppCallback_onPublishMicroblogSuccess(XmppCallback self, String id_) {
    self.onPublishMicroblogSuccess(id_);
  }
  public static void SwigDirector_XmppCallback_onPublishMicroblogFailed(XmppCallback self, String id_) {
    self.onPublishMicroblogFailed(id_);
  }
  public static void SwigDirector_XmppCallback_onDeleteMicroblogSuccess(XmppCallback self, String id_) {
    self.onDeleteMicroblogSuccess(id_);
  }
  public static void SwigDirector_XmppCallback_onDeleteMicroblogFailed(XmppCallback self, String id_) {
    self.onDeleteMicroblogFailed(id_);
  }
  public static void SwigDirector_XmppCallback_onRecvMicroblog(XmppCallback self, long microblog_) {
    self.onRecvMicroblog(new Microblog(microblog_, false));
  }
  public static void SwigDirector_XmppCallback_onMicroblogDeleted(XmppCallback self, String id_) {
    self.onMicroblogDeleted(id_);
  }
  public static void SwigDirector_XmppCallback_onCreateMUCRoomSuccess(XmppCallback self, long room_) {
    self.onCreateMUCRoomSuccess(new JID(room_, false));
  }
  public static void SwigDirector_XmppCallback_onCreateMUCRoomFailed(XmppCallback self, long room_, int error_) {
    self.onCreateMUCRoomFailed(new JID(room_, false), CreateMUCRoomError.swigToEnum(error_));
  }
  public static void SwigDirector_XmppCallback_onConfigMUCRoomSuccess(XmppCallback self, long room_) {
    self.onConfigMUCRoomSuccess(new JID(room_, false));
  }
  public static void SwigDirector_XmppCallback_onConfigMUCRoomFailed(XmppCallback self, long room_) {
    self.onConfigMUCRoomFailed(new JID(room_, false));
  }
  public static void SwigDirector_XmppCallback_onDestroyMUCRoomSuccess(XmppCallback self, long room_) {
    self.onDestroyMUCRoomSuccess(new JID(room_, false));
  }
  public static void SwigDirector_XmppCallback_onDestroyMUCRoomFailed(XmppCallback self, long room_) {
    self.onDestroyMUCRoomFailed(new JID(room_, false));
  }
  public static void SwigDirector_XmppCallback_onRecvMUCRoomPresence(XmppCallback self, long room_, String participantOldNickname_, String participantNewNickname_, long participantJid_, long pres_, int affi_, int role_) {
    self.onRecvMUCRoomPresence(new JID(room_, false), participantOldNickname_, participantNewNickname_, new JID(participantJid_, false), new Presence(pres_, false), MUCRoomAffiliation.swigToEnum(affi_), MUCRoomRole.swigToEnum(role_));
  }
  public static void SwigDirector_XmppCallback_onRecvMUCRoomChatMessage(XmppCallback self, long room_, String nickname_, long msg_, String xhtml_) {
    self.onRecvMUCRoomChatMessage(new JID(room_, false), nickname_, new Message(msg_, false), xhtml_);
  }
  public static void SwigDirector_XmppCallback_onRecvMUCRoomLocationMessage(XmppCallback self, String id_, long room_, String nickname_, long geoloc_) {
    self.onRecvMUCRoomLocationMessage(id_, new JID(room_, false), nickname_, new Geoloc(geoloc_, false));
  }
  public static void SwigDirector_XmppCallback_onRecvMUCRoomAttentionMessage(XmppCallback self, String id_, long room_, String nickname_) {
    self.onRecvMUCRoomAttentionMessage(id_, new JID(room_, false), nickname_);
  }
  public static void SwigDirector_XmppCallback_onModifyMUCRoomMemberListSuccess(XmppCallback self, long room_) {
    self.onModifyMUCRoomMemberListSuccess(new JID(room_, false));
  }
  public static void SwigDirector_XmppCallback_onModifyMUCRoomMemberListFailed(XmppCallback self, long room_) {
    self.onModifyMUCRoomMemberListFailed(new JID(room_, false));
  }
  public static void SwigDirector_XmppCallback_onModifyMUCRoomOwnerListSuccess(XmppCallback self, long room_) {
    self.onModifyMUCRoomOwnerListSuccess(new JID(room_, false));
  }
  public static void SwigDirector_XmppCallback_onModifyMUCRoomOwnerListFailed(XmppCallback self, long room_) {
    self.onModifyMUCRoomOwnerListFailed(new JID(room_, false));
  }
  public static void SwigDirector_XmppCallback_onRecvMUCRoomDirectInvitation(XmppCallback self, long room_, long invitor_, String reason_) {
    self.onRecvMUCRoomDirectInvitation(new JID(room_, false), new JID(invitor_, false), reason_);
  }
  public static void SwigDirector_XmppCallback_onRecvMUCRoomMediatedInvitation(XmppCallback self, long room_, long invitor_, String reason_) {
    self.onRecvMUCRoomMediatedInvitation(new JID(room_, false), new JID(invitor_, false), reason_);
  }
  public static void SwigDirector_XmppCallback_onRetrieveMUCRoomMemberList(XmppCallback self, long room_, long members_) {
    self.onRetrieveMUCRoomMemberList(new JID(room_, false), new StringList(members_, false));
  }
  public static void SwigDirector_XmppCallback_onRetrieveMUCRoomOwnerList(XmppCallback self, long room_, long owners_) {
    self.onRetrieveMUCRoomOwnerList(new JID(room_, false), new StringList(owners_, false));
  }
  public static void SwigDirector_XmppCallback_onMUCRoomSubjectChanged(XmppCallback self, long room_, String nickname_, String subject_) {
    self.onMUCRoomSubjectChanged(new JID(room_, false), nickname_, subject_);
  }
  public static void SwigDirector_XmppCallback_onRetrieveMUCRoomInfo(XmppCallback self, long room_, long info_) {
    self.onRetrieveMUCRoomInfo(new JID(room_, false), new MUCRoomInfo(info_, false));
  }
  public static void SwigDirector_XmppCallback_onRetrieveMUCRoomConfig(XmppCallback self, long room_, long config_) {
    self.onRetrieveMUCRoomConfig(new JID(room_, false), new MUCRoomConfig(config_, false));
  }
  public static void SwigDirector_XmppCallback_onMUCRoomInvitationRejected(XmppCallback self, long room_, long invitee_, String reason_) {
    self.onMUCRoomInvitationRejected(new JID(room_, false), new JID(invitee_, false), reason_);
  }
  public static void SwigDirector_XmppCallback_onChangeMUCNicknameConflict(XmppCallback self, long room_) {
    self.onChangeMUCNicknameConflict(new JID(room_, false));
  }
  public static void SwigDirector_XmppCallback_onFtRequest(XmppCallback self, long initiator_, String sid_, long file_, boolean supportS5b_, boolean supportIbb_, boolean supportOob_) {
    self.onFtRequest(new JID(initiator_, false), sid_, new FileMetadata(file_, false), supportS5b_, supportIbb_, supportOob_);
  }
  public static void SwigDirector_XmppCallback_onFtRquestRejected(XmppCallback self, String sid_) {
    self.onFtRquestRejected(sid_);
  }
  public static void SwigDirector_XmppCallback_onFtRquestError(XmppCallback self, String sid_, int type_, int error_) {
    self.onFtRquestError(sid_, StanzaErrorType.swigToEnum(type_), StanzaError.swigToEnum(error_));
  }
  public static void SwigDirector_XmppCallback_onFtIncomingBytestreamCreated(XmppCallback self, String sid_, int type_, long initiator_) {
    self.onFtIncomingBytestreamCreated(sid_, Bytestream.StreamType.swigToEnum(type_), new JID(initiator_, false));
  }
  public static void SwigDirector_XmppCallback_onFtOutgoingBytestreamCreated(XmppCallback self, String sid_, int type_, long target_) {
    self.onFtOutgoingBytestreamCreated(sid_, Bytestream.StreamType.swigToEnum(type_), new JID(target_, false));
  }
  public static void SwigDirector_XmppCallback_onFtIncomingBytestreamOpened(XmppCallback self, String sid_) {
    self.onFtIncomingBytestreamOpened(sid_);
  }
  public static void SwigDirector_XmppCallback_onFtOutgoingBytestreamOpened(XmppCallback self, String sid_) {
    self.onFtOutgoingBytestreamOpened(sid_);
  }
  public static void SwigDirector_XmppCallback_onRecvFtBytestreamData__SWIG_0(XmppCallback self, String sid_, long data_) {
    self.onRecvFtBytestreamData(sid_, new BytestreamData(data_, false));
  }
  public static void SwigDirector_XmppCallback_onRecvFtBytestreamData__SWIG_1(XmppCallback self, long sid_, long data_) {
    self.onRecvFtBytestreamData(new SID(sid_, false), new BytestreamData(data_, false));
  }
  public static void SwigDirector_XmppCallback_onFtBytestreamClosed(XmppCallback self, String sid_) {
    self.onFtBytestreamClosed(sid_);
  }
  public static void SwigDirector_XmppCallback_onDiscoItem(XmppCallback self, long parent_, long jid_, String node_, String name_) {
    self.onDiscoItem(new JID(parent_, false), new JID(jid_, false), node_, name_);
  }

  private final static native void swig_module_init();
  static {
    swig_module_init();
  }
}
